<%- include('../../views/partials/admin/header') %>
<link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">

<body>
  <!-- Layout wrapper -->
  <div class="layout-wrapper layout-content-navbar">
    <div class="layout-container">


      <!-- Layout container -->
      <div class="layout-page">
        <!-- Navbar - Sidebar-->
        <%- include('../../views/partials/admin/sidebar') %>
        <%- include('../../views/partials/admin/navbar') %>

        <!-- Content wrapper -->
        <div class="content-wrapper">
          <!-- Content -->

          <div class="container-xxl flex-grow-1 container-p-y">
            <h4 class="fw-bold py-3 mb-4"><span class="text-muted fw-light">Products/</span> Add New Product</h4>

            <!-- Basic Layout -->
            <div class="col-xl">
              <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                  <h5 class="mb-0">Product Details</h5>
                  <small class="text-muted float-end">Add New Product</small>
                </div>
                <div class="card-body">
                  <div class="card-body">
                    <% if (messages && messages.error) { %>
                    <div class="alert alert-danger alert-dismissible fade show text-center" role="alert">
                      <strong>Error:</strong> <%= messages.error %>
                      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                    <% } %>
                    <% if (messages && messages.success) { %>
                    <div class="alert alert-success alert-dismissible fade show text-center" role="alert">
                      <strong>Success:</strong> <%= messages.success %>
                      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                    <% } %>
                  </div>
                  <form action="/admin/addProduct" method="POST" enctype="multipart/form-data" id="addProductForm">
                    <div class="row">
                      <div class="col-md-6 mb-3">
                        <div id="category-error" class="error-message text-danger"></div>
                        <label for="category-select">Select Category</label>
                        <select class="form-control" id="category-select" name="category">
                          <option value="">Select Category</option>
                          <% category.forEach((category) => { %>
                          <option value="<%= category._id %>"><%= category.name %></option>
                          <% }); %>
                        </select>
                      </div>
                      <div class="col-md-6 mb-3">
                        <div id="brand-error" class="error-message text-danger"></div>
                        <label for="brand-select">Select Brand</label>
                        <select class="form-control" id="brand-select" name="brand">
                          <option value="">Select Brand</option>
                          <% brand.forEach((brand) => { %>
                          <option value="<%= brand.brandName %>"><%= brand.brandName %></option>
                          <% }); %>
                        </select>
                      </div>
                    </div>
                    <div class="mb-3">
                      <div id="productName-error" class="error-message text-danger"></div>
                      <label class="form-label" for="basic-default-fullname">Product Name</label>
                      <input type="text" class="form-control" id="basic-default-fullname" placeholder="Product Name" name="productName" />
                    </div>
                    <div class="mb-3">
                      <div id="description-error" class="error-message text-danger"></div>
                      <label class="form-label" for="basic-default-message">Product Description</label>
                      <textarea id="descriptionid" class="form-control" placeholder="Enter Product Description" name="descriptionid"></textarea>
                    </div>
                    <label class="form-label" for="basic-default-message">Upload Product Images</label>

                    <% for (let i = 1; i <= 4; i++) { %>
                    <% if (i % 2 !== 0) { %>
                    <div class="row mb-3">
                      <% } %>
                      <div class="col-md-3">
                        <input type="file" class="form-control" id="image<%= i %>" name="images" accept="image/*" />
                        <small id="image<%= i %>-error" class="text-danger d-block mt-1" style="display: none;"></small>
                      </div>
                      <div class="col-md-3">
                        <div class="image-preview" id="preview-image<%= i %>" style="width: 150px; height: 150px; background-color: #f5f5f5; border: 1px solid #ddd; 
                            display: flex; align-items: center; justify-content: center;">
                          <img id="preview-img<%= i %>" src="" alt="No image" style="width: 100%; height: 100%; object-fit: cover; display: none;" />
                        </div>
                      </div>
                      <% if (i % 2 === 0 || i === 4) { %>
                    </div>
                    <% } %>
                    <% } %>
                    <!-- Modal for Image Cropping -->
                    <div id="cropperModal" class="modal" tabindex="-1" role="dialog">
                      <div class="modal-dialog" role="document">
                        <div class="modal-content">
                          <div class="modal-header">
                            <h5 class="modal-title">Crop Image</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                              <span aria-hidden="true">&times;</span>
                            </button>
                          </div>
                          <div class="modal-body">
                            <div class="crop-container">
                              <img id="cropperImage" src="" alt="Crop Image" style="max-width: 100%;" />
                            </div>
                          </div>
                          <div class="modal-footer">
                            <button type="button" id="cropImage" class="btn btn-primary">Crop</button>
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div class="row">
                      <div class="col-md-4 mb-3">
                        <div id="size-error" class="error-message text-danger"></div>
                        <label for="storage-size" class="form-label">Storage Size</label>
                        <input type="text" class="form-control text-uppercase" id="storage-size" name="storage" list="storage-options" placeholder="Enter or select Storage Size" pattern="[A-Za-z0-9]+" />
                        <datalist id="storage-options">
                          <option value="NA"></option>
                          <option value="64GB"></option>
                          <option value="128GB"></option>
                          <option value="256GB"></option>
                          <option value="512GB"></option>
                          <option value="1024GB"></option>
                        </datalist>
                      </div>
                      <div class="col-md-4 mb-3">
                        <div id="color-error" class="error-message text-danger"></div>
                        <label for="color" class="form-label">Color</label>
                        <input type="text" class="form-control text-uppercase" id="color" name="color" list="color-options" placeholder="Enter or select a color" pattern="[A-Za-z ]+" />
                        <datalist id="color-options">
                          <option value="BLACK"></option>
                          <option value="WHITE"></option>
                          <option value="BLUE"></option>
                          <option value="RED"></option>
                        </datalist>
                      </div>
                      <div class="col-md-4 mb-3" id="custom-color-container" style="display: none;">
                        <label for="custom-color" class="form-label">Enter Custom Color Name</label>
                        <input type="text" class="form-control" id="custom-color" name="custom_color" placeholder="Enter color here" />
                      </div>
                      <div class="col-md-4 mb-3">
                        <div id="quantity-error" class="error-message text-danger"></div>
                        <label for="quantity" class="form-label">Quantity</label>
                        <input type="number" class="form-control" id="quantity" name="quantity" min="1" />
                      </div>
                    </div>
                    <div class="row mb-3">
                      <div class="col-md-6">
                        <div id="regularPrice-error" class="error-message text-danger"></div>
                        <label for="regular-price" class="form-label">Regular Price</label>
                        <input type="number" class="form-control" id="regular-price" name="regularPrice" placeholder="â‚¹ Enter regular price" />
                      </div>
                      <div class="col-md-6">
                        <div id="salePrice-error" class="error-message text-danger"></div>
                        <label for="offer-price" class="form-label">Offer Price</label>
                        <input type="number" class="form-control" id="offer-price" name="salePrice" placeholder="â‚¹ Enter offer price" />
                      </div>
                    </div>
                    <div class="row mb-3">
                      <div class="col-sm-10 offset-sm-2">
                        <button type="submit" id="submitButton" class="btn btn-primary">Add Product</button>
                      </div>
                    </div>
                  </form>
                </div>
              </div>
            </div>

          </div>
        </div>
        <!-- Content wrapper -->
      </div>
      <!-- / Layout page -->

    </div>
  </div>
  <!-- Overlay -->
  <div class="layout-overlay layout-menu-toggle"></div>
  </div>
  <!-- / Layout wrapper -->
  <!-- Core JS -->
  <!-- build:js assets/vendor/js/core.js -->
  <script src="/assets/vendor/libs/jquery/jquery.js"></script>
  <script src="/assets/vendor/libs/popper/popper.js"></script>
  <script src="/assets/vendor/js/bootstrap.js"></script>
  <script src="/assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js"></script>

  <script src="/assets/vendor/js/menu.js"></script>
  <!-- endbuild -->

  <!-- Vendors JS -->
  <script src="/assets/vendor/libs/apex-charts/apexcharts.js"></script>

  <!-- Main JS -->
  <script src="/assets/js/main.js"></script>

  <!-- Page JS -->
  <script src="/assets/js/dashboards-analytics.js"></script>

  <!-- Place this tag in your head or just before your close body tag. -->
  <script async defer src="https://buttons.github.io/buttons.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const cropperModal = new bootstrap.Modal(document.getElementById('cropperModal'));
      let cropper;
      let currentImageIndex;
      let croppedImages = {};

      for (let i = 1; i <= 4; i++) {
        const imageInput = document.querySelector('#addProductForm #image' + i);
        if (imageInput) {
          imageInput.addEventListener('change', function(event) {
            const file = event.target.files[0];
            if (file) {
              const reader = new FileReader();
              reader.onload = function(e) {
                document.getElementById('cropperImage').src = e.target.result;
                cropperModal.show();
                currentImageIndex = i;

                if (cropper) {
                  cropper.destroy();
                }

                cropper = new Cropper(document.getElementById('cropperImage'), {
                  aspectRatio: 1,
                  viewMode: 1,
                });
              };
              reader.readAsDataURL(file);
            }
          });
        }
      }

      // Cropping and storing the image
      const cropImageButton = document.querySelector('#addProductForm #cropImage');
      if (cropImageButton) {
        cropImageButton.addEventListener('click', function() {
          if (cropper) {
            const canvas = cropper.getCroppedCanvas({
              width: 150,
              height: 150,
            });
            const previewImg = document.querySelector(`#addProductForm #preview-img${currentImageIndex}`);
            const previewContainer = document.querySelector(`#addProductForm #preview-image${currentImageIndex}`);

            canvas.toBlob(function(blob) {
              const url = URL.createObjectURL(blob);
              previewImg.src = url;
              previewImg.style.display = 'block';
              previewContainer.style.backgroundColor = 'transparent';
              cropperModal.hide();

              croppedImages[currentImageIndex] = blob;
            }, 'image/jpeg');
          }
        });
      }

      // Form validation and submission
      const formElement = document.getElementById('addProductForm');
      if (formElement) {
        formElement.addEventListener('submit', function(event) {
          const isValid = validateForm(formElement);
          if (!isValid) {
            event.preventDefault();
          }
        });
      }

      function validateForm(form) {
        clearErrorMessages(form);
        let isValid = true;

        const name = form.querySelector('[name="productName"]').value.trim();
        const description = form.querySelector('#descriptionid').value.trim();
        const brand = form.querySelector('[name="brand"]').value.trim();
        const category = form.querySelector('[name="category"]').value.trim();
        const price = form.querySelector('[name="regularPrice"]').value.trim();
        const salePrice = form.querySelector('[name="salePrice"]').value.trim();
        const color = form.querySelector('[name="color"]').value.trim();
        const customColor = form.querySelector('#custom-color').value.trim();
        const quantity = form.querySelector('[name="quantity"]').value.trim();
        const imageInputs = form.querySelectorAll('input[type="file"][name^="image"]');

        if (!name) {
          displayErrorMessage(form, 'productName-error', 'Please enter a product name.');
          isValid = false;
        } else if (name.length >= 59) {
          displayErrorMessage(form, 'productName-error', 'Product name must be less than 59 characters.');
          isValid = false;
        }

        if (!description) {
          displayErrorMessage(form, 'description-error', 'Please enter a product description.');
          isValid = false;
        } else if (description.length >= 500) {
          displayErrorMessage(form, 'description-error', 'Description must be less than 500 characters.');
          isValid = false;
        }


        if (!category) {
          displayErrorMessage(form, 'category-error', 'Please select a category.');
          isValid = false;
        }

        if (!brand) {
          displayErrorMessage(form, 'brand-error', 'Please select a brand.');
          isValid = false;
        }

        if (!quantity || quantity <= 0) {
          displayErrorMessage(form, 'quantity-error', 'Please enter a valid non-negative quantity.');
          isValid = false;
        }

        if (!price || !/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) <= 0) {
          displayErrorMessage(form, 'regularPrice-error', 'Please enter a valid non-negative price.');
          isValid = false;
        }

        if (salePrice && parseFloat(price) < parseFloat(salePrice)) {
          displayErrorMessage(form, 'salePrice-error', 'Regular price must be greater than sale price.');
          isValid = false;
        }

        if (!color && !customColor) {
          displayErrorMessage(form, 'color-error', 'Please select or enter a color.');
          isValid = false;
        }

        let totalImagesSelected = 0;
        imageInputs.forEach((imageInput) => {
          totalImagesSelected += imageInput.files.length;
        });

        if (totalImagesSelected < 3) {
          displayErrorMessage(form, 'image1-error', 'Please select at least three images.');
          isValid = false;
        }

        return isValid;
      }

      document.getElementById('color').addEventListener('change', function() {
        const customColorContainer = document.getElementById('custom-color-container');
        customColorContainer.style.display = this.value === 'custom' ? 'block' : 'none';
      });

      function displayErrorMessage(form, elementId, message) {
        const errorElement = form.querySelector(`#${elementId}`);
        if (errorElement) {
          errorElement.textContent = message;
          errorElement.style.display = 'block';
        }
      }

      function clearErrorMessages(form) {
        const errorElements = form.querySelectorAll('.error-message');
        errorElements.forEach((element) => {
          element.textContent = '';
          element.style.display = 'none';
        });
      }
    });
  </script>

</body>

</html>