<%- include('../../views/partials/admin/header') %>

<body>
  <!-- Layout wrapper -->
  <div class="layout-wrapper layout-content-navbar">
    <div class="layout-container">


      <!-- Layout container -->
      <div class="layout-page">
        <!-- Navbar - Sidebar-->
        <%- include('../../views/partials/admin/sidebar') %>
        <%- include('../../views/partials/admin/navbar') %>

        <!-- Content wrapper -->
        <div class="content-wrapper">
          <!-- Content -->

          <div class="container-xxl flex-grow-1 container-p-y">
            <h4 class="fw-bold py-3 mb-4"><span class="text-muted fw-light">Coupons /</span> Add New Coupon</h4>

            <!-- Basic Layout -->
            <div class="col-xxl">
              <div class="card mb-4">
                <div class="card-header d-flex align-items-center justify-content-between">
                  <h5 class="mb-0">Add New Coupon</h5>
                </div>
                <div class="card-body">
                  <form onsubmit="return handleFormSubmit(event)" enctype="multipart/form-data" id="newCouponForm">
                    <div class="row mb-3">
                      <div class="col-md-6">
                        <div class="text-danger error-message" id="name-error" style="display: none;"></div>
                        <label class="form-label" for="coupon-name">Name</label>
                        <input type="text" class="form-control" id="coupon-name" placeholder="Enter coupon name" name="name" />
                      </div>

                      <div class="col-md-3">
                        <div class="text-danger error-message" id="startOn-error" style="display: none;"></div>
                        <label class="form-label" for="startOn">Start On</label>
                        <input type="date" class="form-control" id="startOn" name="startOn" />
                      </div>

                      <div class="col-md-3">
                        <div class="text-danger error-message" id="expireOn-error" style="display: none;"></div>
                        <label class="form-label" for="expireOn">Expire On</label>
                        <input type="date" class="form-control" id="expireOn" name="expireOn" />
                      </div>
                    </div>

                    <div class="row mb-3">
                      <div class="col-md-3">
                        <div class="text-danger error-message" id="discountType-error" style="display: none;"></div>
                        <label class="form-label" for="discountType">Discount Type</label>
                        <select class="form-control" id="discountType" name="discountType">
                          <option value="">Select discount type</option>
                          <option value="percentage">Percentage</option>
                          <option value="fixed">Fixed</option>
                        </select>
                      </div>

                      <div class="col-md-6">
                        <div class="text-danger error-message" id="discountValue-error" style="display: none;"></div>
                        <label class="form-label" for="discountValue">Discount Value</label>
                        <input type="number" class="form-control" id="discountValue" placeholder="Enter discount value" name="discountValue" />
                      </div>

                      <div class="col-md-3">
                        <div class="text-danger error-message" id="isActive-error" style="display: none;"></div>
                        <label class="form-label" for="isActive">Is Active</label>
                        <select class="form-control" id="isActive" name="isActive">
                          <option value="true">Active</option>
                          <option value="false">Inactive</option>
                        </select>
                      </div>
                    </div>

                    <div class="row mb-3">
                      <div class="col-md-6">
                        <div class="text-danger error-message" id="maxDiscount-error" style="display: none;"></div>
                        <label class="form-label" for="maxDiscount">Maximum Discount</label>
                        <input type="number" class="form-control" id="maxDiscount" placeholder="Enter maximum discount (optional)" name="maxDiscount" />
                      </div>

                      <div class="col-md-6">
                        <div class="text-danger error-message" id="minimumOrderAmount-error" style="display: none;"></div>
                        <label class="form-label" for="minimumOrderAmount">Minimum Order Amount</label>
                        <input type="number" class="form-control" id="minimumOrderAmount" placeholder="Enter minimum order amount" name="minimumOrderAmount" />
                      </div>
                    </div>

                    <div class="row mb-3">
                      <div class="col-md-3">
                        <div class="text-danger error-message" id="usageLimitPerUser-error" style="display: none;"></div>
                        <label class="form-label" for="usageLimitPerUser">Usage Limit Per User</label>
                        <input type="number" class="form-control" id="usageLimitPerUser" placeholder="Enter usage limit per user" name="usageLimitPerUser" />
                      </div>

                      <div class="col-md-3">
                        <div class="text-danger error-message" id="totalUsageLimit-error" style="display: none;"></div>
                        <label class="form-label" for="totalUsageLimit">Total Usage Limit</label>
                        <input type="number" class="form-control" id="totalUsageLimit" placeholder="Enter total usage limit (optional)" name="totalUsageLimit" />
                      </div>
                      <div class="row mb-3">
                        <div class="col-md-12 d-flex justify-content-end align-items-center mt-3">
                          <button type="submit" class="btn btn-primary">Create New Coupon</button>
                        </div>
                      </div>
                    </div>
                  </form>
                </div>
              </div>
            </div>


            <!-- Content wrapper -->
          </div>
          <!-- / Layout page -->

        </div>
      </div>
      <!-- Overlay -->
      <div class="layout-overlay layout-menu-toggle"></div>
    </div>
    <!-- / Layout wrapper -->

    <script>
      async function handleFormSubmit(event) {
        event.preventDefault();
        const form = event.target;
        let isValid = true;

        function showError(id, message) {
          const errorElement = document.getElementById(id);
          errorElement.textContent = message;
          errorElement.style.display = "block";
        }

        function clearError(id) {
          document.getElementById(id).style.display = "none";
        }

        const name = document.getElementById("coupon-name").value.trim();
        const startOn = document.getElementById("startOn").value;
        const expireOn = document.getElementById("expireOn").value;
        const discountType = document.getElementById("discountType").value;
        const discountValue = parseFloat(document.getElementById("discountValue").value);
        const isActive = document.getElementById("isActive").value;
        const maxDiscount = document.getElementById("maxDiscount").value ? parseFloat(document.getElementById("maxDiscount").value) : null;
        const minimumOrderAmount = parseFloat(document.getElementById("minimumOrderAmount").value);
        const usageLimitPerUser = parseInt(document.getElementById("usageLimitPerUser").value);
        const totalUsageLimit = document.getElementById("totalUsageLimit").value ? parseInt(document.getElementById("totalUsageLimit").value) : null;

        document.querySelectorAll(".error-message").forEach(el => el.style.display = "none");

        if (!name) {
          showError("name-error", "Coupon name is required.");
          isValid = false;
        } else {
          const capitalizedName = name.toUpperCase();
          const namePattern = /^[A-Z0-9-]+$/;
          if (!namePattern.test(capitalizedName)) {
            showError("name-error", "Coupon name can only contain alphabets, numbers, and hyphens (-).");
            isValid = false;
          } else {
            document.getElementById("coupon-name").value = capitalizedName;
          }
        }

        if (!startOn) {
          showError("startOn-error", "Start date is required.");
          isValid = false;
        }

        if (!expireOn) {
          showError("expireOn-error", "Expire date is required.");
          isValid = false;
        } else if (new Date(startOn) >= new Date(expireOn)) {
          showError("expireOn-error", "Expiration date must be after the start date.");
          isValid = false;
        }

        if (!discountType) {
          showError("discountType-error", "Please select a discount type.");
          isValid = false;
        }

        if (isNaN(discountValue) || discountValue <= 0) {
          showError("discountValue-error", "Discount value must be a positive number.");
          isValid = false;
        }

        if (maxDiscount !== null && (isNaN(maxDiscount) || maxDiscount <= 0)) {
          showError("maxDiscount-error", "Maximum discount must be a positive number.");
          isValid = false;
        }

        if (isNaN(minimumOrderAmount) || minimumOrderAmount < 0) {
          showError("minimumOrderAmount-error", "Minimum order amount must be a non-negative number.");
          isValid = false;
        }

        if (isNaN(usageLimitPerUser) || usageLimitPerUser <= 0) {
          showError("usageLimitPerUser-error", "Usage limit per user must be a positive integer.");
          isValid = false;
        }

        if (totalUsageLimit !== null && (isNaN(totalUsageLimit) || totalUsageLimit <= 0)) {
          showError("totalUsageLimit-error", "Total usage limit must be a positive integer.");
          isValid = false;
        }

        if (isValid) {
          const data = {
            name,
            startOn,
            expireOn,
            discountType,
            discountValue,
            isActive,
            maxDiscount,
            minimumOrderAmount,
            usageLimitPerUser,
            totalUsageLimit,
          };

          console.log(data);

          try {
            const response = await fetch('/admin/coupons/add-coupon', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
              },
              body: JSON.stringify(data),
            });

            const result = await response.json();

            if (response.ok) {
              Swal.fire({
                title: 'Success!',
                text: 'Coupon created successfully!',
                icon: 'success',
                confirmButtonText: 'OK'
              }).then(() => {
                form.reset();
              });
            } else {
              Swal.fire({
                title: 'Error!',
                text: result.error || 'Failed to create coupon.',
                icon: 'error',
                confirmButtonText: 'Try Again'
              });
            }
          } catch (error) {
            console.error('Error during fetch:', error);
            Swal.fire({
              title: 'Oops!',
              text: 'An error occurred. Please try again.',
              icon: 'error',
              confirmButtonText: 'OK'
            });
          }
        }
      }
    </script>