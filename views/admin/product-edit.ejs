<%- include('../../views/partials/admin/header') %>
<link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">

<body>
  <!-- Layout wrapper -->
  <div class="layout-wrapper layout-content-navbar">
    <div class="layout-container">


      <!-- Layout container -->
      <div class="layout-page">
        <!-- Navbar - Sidebar-->
        <%- include('../../views/partials/admin/sidebar') %>
        <%- include('../../views/partials/admin/navbar') %>

        <!-- Content wrapper -->
        <div class="content-wrapper">
          <!-- Content -->

          <div class="container-xxl flex-grow-1 container-p-y">
            <h4 class="fw-bold py-3 mb-4"><span class="text-muted fw-light"> Products/</span> Add New Product</h4>

            <!-- Basic Layout -->
            <div class="col-xl">
              <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                  <h5 class="mb-0">Product Details</h5>
                  <small class="text-muted float-end">Add New Product</small>
                </div>
                <div class="card-body">
                  <div class="card-body">
                    <% if (messages && messages.error) { %>
                    <div class="alert alert-danger alert-dismissible fade show text-center" role="alert">
                      <strong>Error:</strong> <%= messages.error %>
                      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                    <% } %>
                    <% if (messages && messages.success) { %>
                    <div class="alert alert-success alert-dismissible fade show text-center" role="alert">
                      <strong>Success:</strong> <%= messages.success %>
                      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                    <% } %>
                  </div>

                  <form action="/admin/editProduct/<%= product._id %>" method="POST" enctype="multipart/form-data">
                    <div class="row">
                      <div class="col-md-6 mb-3">
                        <div id="category-error" class="error-message text-danger"></div>
                        <label for="category-select">Select Category</label>
                        <select class="form-control" id="category-select" name="category">
                          <option value="<%= product.category %>"><%= categoryMap[product.category] %></option>
                          <% category.forEach((category) => { %>
                          <option value="<%= category._id %>"><%= category.name %></option>
                          <% }); %>
                        </select>
                      </div>
                      <div class="col-md-6 mb-3">
                        <div id="brand-error" class="error-message text-danger"></div>
                        <label for="brand-select">Select Brand</label>
                        <select class="form-control" id="brand-select" name="brand">
                          <option value="<%= product.brand %>"><%= product.brand %></option>
                          <% brand.forEach((brand) => { %>
                          <option value="<%= brand.brandName %>"><%= brand.brandName %></option>
                          <% }); %>
                        </select>
                      </div>
                    </div>
                    <div class="mb-3">
                      <div id="productName-error" class="error-message text-danger"></div>
                      <label class="form-label" for="basic-default-fullname">Product Name</label>
                      <input type="text" class="form-control" id="basic-default-fullname" placeholder="Product Name" name="productName" value="<%= product.productName %>" />
                    </div>
                    <div class="mb-3">
                      <div id="description-error" class="error-message text-danger"></div>
                      <label class="form-label" for="basic-default-message">Product Description</label>
                      <textarea id="descriptionid" class="form-control" placeholder="Enter Product Description" name="descriptionid"> <%= product.description %></textarea>
                    </div>
                    <label class="form-label" for="basic-default-message">Upload Product Images</label>

                    <input type="hidden" id="productId" value="<%= product._id %>" />
                    <% for (let i = 0; i < 4; i++) { %>
                    <div class="row mb-3">
                      <div id="image<%= i %>-error" class="error-message text-danger"></div>
                      <label class="col-sm-2 col-form-label" for="image<%= i %>">Image <%= i + 1 %></label>
                      <div class="col-sm-4">
                        <input type="file" class="form-control" id="image<%= i %>" name="images" accept="image/*" />
                      </div>
                      <div class="col-sm-6 d-flex align-items-center justify-content-center">
                        <div class="image-preview position-relative" id="preview-image<%= i %>" style="width: 150px; height: 150px; background-color: #f5f5f5; display: flex; align-items: center; justify-content: center; border: 2px solid #979b9f">
                          <img id="preview-img<%= i %>" src="<%= product.productImage[i] ? product.productImage[i] : '' %>" alt="No image" style="width: 100%; height: 100%; object-fit: cover; display: <%= product.productImage[i] ? 'block' : 'none' %>;" />
                          <% if (product.productImage[i]) { %>
                          <button type="button" class="btn btn-danger remove-image position-absolute" style="top: 5px; right: 5px;" data-index="<%= i %>">Remove</button>
                          <% } %>
                        </div>
                      </div>
                    </div>
                    <% } %>

                    <!-- Modal for Image Cropping -->
                    <div id="cropperModal" class="modal" tabindex="-1" role="dialog">
                      <div class="modal-dialog" role="document">
                        <div class="modal-content">
                          <div class="modal-header">
                            <h5 class="modal-title">Crop Image</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                              <span aria-hidden="true">&times;</span>
                            </button>
                          </div>
                          <div class="modal-body">
                            <div class="crop-container">
                              <img id="cropperImage" src="" alt="Crop Image" style="max-width: 100%;" />
                            </div>
                          </div>
                          <div class="modal-footer">
                            <button type="button" id="cropImage" class="btn btn-primary">Crop</button>
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                          </div>
                        </div>
                      </div>
                    </div>
                    <div class="row">
                      <div class="col-md-4 mb-3">
                        <div id="size-error" class="error-message text-danger"></div>
                        <label for="storage-size" class="form-label">Storage Size</label>
                        <select class="form-control" id="storage-size" name="storage">
                          <option value='<%= product.storage %>'><%= product.storage %></option>
                          <option value="64GB">64GB</option>
                          <option value="128GB">128GB</option>
                          <option value="256GB">256GB</option>
                          <option value="512GB">512GB</option>
                        </select>
                      </div>
                      <div class="col-md-4 mb-3">
                        <div id="color-error" class="error-message text-danger"></div>
                        <label for="color" class="form-label">Color</label>
                        <select class="form-control" id="color" name="color">
                          <option value="<%= product.color %>"><%= product.color %></option>
                          <option value="black">Black</option>
                          <option value="white">White</option>
                          <option value="blue">Blue</option>
                          <option value="red">Red</option>
                          <option value="custom">Custom Color</option>
                        </select>
                      </div>
                      <div class="col-md-4 mb-3" id="custom-color-container" style="display: none;">
                        <label for="custom-color" class="form-label">Enter Custom Color Name</label>
                        <input type="text" class="form-control" id="custom-color" name="custom_color" placeholder="Enter color here" />
                      </div>
                      <div class="col-md-4 mb-3">
                        <div id="quantity-error" class="error-message text-danger"></div>
                        <label for="quantity" class="form-label">Quantity</label>
                        <input type="number" class="form-control" id="quantity" name="quantity" value="<%= product.quantity %>" />
                      </div>
                    </div>
                    <div class="row mb-3">
                      <div class="col-md-6">
                        <div id="regularPrice-error" class="error-message text-danger"></div>
                        <label for="regular-price" class="form-label">Regular Price</label>
                        <input type="number" class="form-control" id="regular-price" name="regularPrice" placeholder="₹ Enter regular price" value="<%= product.regularPrice %>" />
                      </div>
                      <div class="col-md-6">
                        <div id="salePrice-error" class="error-message text-danger"></div>
                        <label for="offer-price" class="form-label">Offer Price</label>
                        <input type="number" class="form-control" id="offer-price" name="salePrice" placeholder="₹ Enter offer price" value="<%= product.salePrice %>" />
                      </div>
                    </div>
                    <div class="row mb-3">
                      <div class="col-sm-10 offset-sm-2">
                        <button type="submit" class="btn btn-primary">Update Product</button>
                      </div>
                    </div>
                  </form>
                </div>
              </div>
            </div>

          </div>
        </div>
        <!-- Content wrapper -->
      </div>
      <!-- / Layout page -->

    </div>
  </div>
  <!-- Overlay -->
  <div class="layout-overlay layout-menu-toggle"></div>
  </div>
  <!-- / Layout wrapper -->
  <!-- Core JS -->
  <!-- build:js assets/vendor/js/core.js -->
  <script src="/assets/vendor/libs/jquery/jquery.js"></script>
  <script src="/assets/vendor/libs/popper/popper.js"></script>
  <script src="/assets/vendor/js/bootstrap.js"></script>
  <script src="/assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js"></script>

  <script src="/assets/vendor/js/menu.js"></script>
  <!-- endbuild -->

  <!-- Vendors JS -->
  <script src="/assets/vendor/libs/apex-charts/apexcharts.js"></script>

  <!-- Main JS -->
  <script src="/assets/js/main.js"></script>

  <!-- Page JS -->
  <script src="/assets/js/dashboards-analytics.js"></script>

  <!-- Place this tag in your head or just before your close body tag. -->
  <script async defer src="https://buttons.github.io/buttons.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const cropperModal = new bootstrap.Modal(document.getElementById('cropperModal'));
      let cropper;
      let currentImageIndex;
      let croppedImages = {}; // Store cropped images for later submission

      const productId = document.getElementById('productId').value;

      function updateImagePreview(index, src, displayStyle) {
        const previewImg = document.getElementById('preview-img' + index);
        const previewContainer = document.getElementById('preview-image' + index);

        previewImg.src = src;
        previewImg.style.display = displayStyle;
        previewContainer.style.backgroundColor = src ? 'transparent' : '#f5f5f5';
        console.log(`Updated preview for image ${index}: src=${src}, display=${displayStyle}`);
      }

      for (let i = 0; i < 4; i++) {
        const imageInput = document.getElementById('image' + i);
        const removeButton = document.querySelector('.remove-image[data-index="' + i + '"]');

        imageInput.addEventListener('change', function(event) {
          const file = event.target.files[0];
          if (file) {
            const reader = new FileReader();
            reader.onload = function(e) {
              document.getElementById('cropperImage').src = e.target.result;
              cropperModal.show();
              currentImageIndex = i;

              if (cropper) {
                cropper.destroy();
              }

              cropper = new Cropper(document.getElementById('cropperImage'), {
                aspectRatio: 1,
                viewMode: 1,
              });
            };
            reader.readAsDataURL(file);
          }
        });

        if (removeButton) {
          removeButton.addEventListener('click', function(event) {
            event.preventDefault(); // Prevent form submission
            const index = this.getAttribute('data-index');
            console.log(`Remove button clicked for image ${index}`);

            updateImagePreview(index, '', 'none');
            document.getElementById('image' + index).value = '';
            delete croppedImages[index];

            // If there was an existing image, remove it from the backend
            fetch(`/admin/removeProductImage/${productId}/${index}`, {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json'
                }
              })
              .then(response => response.json())
              .then(data => {
                console.log('Image removed successfully from backend:', data);
              })
              .catch(error => {
                console.error('Error removing image from backend:', error);
              });
          });
        }
      }

      // Cropping and storing the image
      document.getElementById('cropImage').addEventListener('click', function() {
        const canvas = cropper.getCroppedCanvas({
          width: 150,
          height: 150,
        });

        canvas.toBlob(function(blob) {
          const url = URL.createObjectURL(blob);
          updateImagePreview(currentImageIndex, url, 'block');
          cropperModal.hide();

          // Store the cropped image for later use
          croppedImages[currentImageIndex] = blob;
        }, 'image/jpeg');
      });

      // Submit cropped images when the submit button is clicked
      document.getElementById('submitButton').addEventListener('click', function() {
        const formData = new FormData();

        // Append cropped images to the FormData
        for (let index in croppedImages) {
          const blob = croppedImages[index];
          if (blob) {
            formData.append('croppedImages[]', blob, `cropped-image-${index}.jpg`);
          }
        }

        // Send the cropped images to the server
        fetch(`/admin/editProduct/${productId}`, {
            method: 'POST',
            body: formData,
          })
          .then((response) => response.json())
          .then((data) => {
            console.log('Cropped images uploaded successfully:', data);
            // Optionally reset the form or handle further actions after upload
          })
          .catch((error) => {
            console.error('Error uploading cropped images:', error);
          });
      });
    });
  </script>

  <script>
    document.getElementById('color').addEventListener('change', function() {
      const customColorContainer = document.getElementById('custom-color-container');
      customColorContainer.style.display = this.value === 'custom' ? 'block' : 'none';
    });

    // Bind validateForm to form submission
    const formElement = document.querySelector('form');
    if (formElement) {
      formElement.onsubmit = validateForm;
    }
    // });

    function validateForm(event) {
      clearErrorMessages();

      // Getting form values
      const name = document.getElementsByName('productName')[0].value.trim();
      const description = document.getElementById('descriptionid').value.trim();
      const brand = document.getElementsByName('brand')[0].value.trim();
      const category = document.getElementsByName('category')[0].value.trim();
      const price = document.getElementsByName('regularPrice')[0].value.trim();
      const salePrice = document.getElementsByName('salePrice')[0].value.trim();
      const storageSize = document.getElementsByName('storage')[0].value.trim();
      const color = document.getElementsByName('color')[0].value.trim();
      const customColor = document.getElementById('custom-color').value.trim();
      const quantity = document.getElementsByName('quantity')[0].value.trim();
      const images = document.querySelectorAll('input[type="file"]');

      let isValid = true;

      // Individual field validation checks
      if (name === "") {
        displayErrorMessage('productName-error', 'Please enter a product name.');
        isValid = false;
      }

      if (description === "") {
        displayErrorMessage('description-error', 'Please enter a product description.');
        isValid = false;
      }

      if (category === "") {
        displayErrorMessage('category-error', 'Please select a category.');
        isValid = false;
      }
      // Comment as brand not implemented
      //   if (brand === "") {
      //     displayErrorMessage('brand-error', 'Please select a brand.');
      //     isValid = false;
      //   }

      if (quantity <= 0 || quantity === "") {
        displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
        isValid = false;
      }

      if (price === "" || !/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) <= 0) {
        displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
        isValid = false;
      }

      if (salePrice !== "" && parseFloat(price) < parseFloat(salePrice)) {
        displayErrorMessage('salePrice-error', 'Regular price must be greater than sale price.');
        isValid = false;
      }

      if (color === "" && customColor === "") {
        displayErrorMessage('color-error', 'Please select or enter a color.');
        isValid = false;
      }

      // Image validation: Check if at least 3 images are selected
      let totalImagesSelected = 0;
      const imageInputs = document.querySelectorAll('input[type="file"][name^="image"]'); // Select all image file inputs

      imageInputs.forEach(function(imageInput) {
        totalImagesSelected += imageInput.files.length; // Count selected files
      });

      // if (totalImagesSelected < 3) {
      //   displayErrorMessage('image1-error', 'Please select at least three images.');
      //   isValid = false;
      // }

      if (!isValid) {
        event.preventDefault();
      }

      return isValid;
    }

    function displayErrorMessage(elementId, message) {
      const errorElement = document.getElementById(elementId);
      errorElement.textContent = message;
      errorElement.style.display = "block";
    }

    function clearErrorMessages() {
      const errorElements = document.getElementsByClassName('error-message');
      Array.from(errorElements).forEach(element => {
        element.textContent = '';
        element.style.display = 'none';
      });
    }
  </script>


</body>

</html>