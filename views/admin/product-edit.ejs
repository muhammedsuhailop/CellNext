<%- include('../../views/partials/admin/header') %>
<link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">

<body>
  <!-- Layout wrapper -->
  <div class="layout-wrapper layout-content-navbar">
    <div class="layout-container">


      <!-- Layout container -->
      <div class="layout-page">
        <!-- Navbar - Sidebar-->
        <%- include('../../views/partials/admin/sidebar') %>
        <%- include('../../views/partials/admin/navbar') %>

        <!-- Content wrapper -->
        <div class="content-wrapper">
          <!-- Content -->

          <div class="container-xxl flex-grow-1 container-p-y">
            <h4 class="fw-bold py-3 mb-4"><span class="text-muted fw-light"> Products/</span> Add New Product</h4>

            <!-- Basic Layout -->
            <div class="col-xl">
              <div class="card mb-4">
                <div class="card-header d-flex justify-content-between align-items-center">
                  <h5 class="mb-0">Product Details</h5>
                  <small class="text-muted float-end">Add New Product</small>
                </div>
                <div class="card-body">
                  <div class="card-body">
                    <% if (messages && messages.error) { %>
                    <div class="alert alert-danger alert-dismissible fade show text-center" role="alert">
                      <strong>Error:</strong> <%= messages.error %>
                      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                    <% } %>
                    <% if (messages && messages.success) { %>
                    <div class="alert alert-success alert-dismissible fade show text-center" role="alert">
                      <strong>Success:</strong> <%= messages.success %>
                      <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                    </div>
                    <% } %>
                  </div>

                  <div class="container">
                    <h4 class="fw-bold py-3 mb-4"><span class="text-muted fw-light">Products /</span> Edit Product</h4>

                    <!-- General Product Details -->
                    <form action="/admin/editProduct/<%= product._id %>" method="POST" enctype="multipart/form-data">
                      <h5>Product Details</h5>
                      <hr />
                      <div class="row">
                        <!-- Product Name -->
                        <div class="col-md-6 mb-3">
                          <label for="product-name">Product Name</label>
                          <input type="text" class="form-control" id="product-name" name="productName" value="<%= product.productName %>" placeholder="Enter Product Name" />
                        </div>
                        <!-- Product Description -->
                        <div class="col-md-6 mb-3">
                          <label for="product-description">Product Description</label>
                          <textarea class="form-control" id="product-description" name="description" placeholder="Enter Product Description"><%= product.description %></textarea>
                        </div>
                      </div>
                      <div class="row">
                        <!-- Category -->
                        <div class="col-md-6 mb-3">
                          <label for="category-select">Select Category</label>
                          <select class="form-control" name="category">
                            <option value="<%= product.category %>"><%= categoryMap[product.category] %></option>
                            <% category.forEach((cat) => { %>
                            <option value="<%= cat._id %>"><%= cat.name %></option>
                            <% }); %>
                          </select>
                        </div>
                        <!-- Brand -->
                        <div class="col-md-6 mb-3">
                          <label for="brand-select">Select Brand</label>
                          <select class="form-control" name="brand">
                            <option value="<%= product.brand %>"><%= product.brand %></option>
                            <% brand.forEach((b) => { %>
                            <option value="<%= b.brandName %>"><%= b.brandName %></option>
                            <% }); %>
                          </select>
                        </div>
                      </div>
                      <div class="mb-3">
                        <button type="submit" class="btn btn-primary">Update Product Details</button>
                      </div>
                    </form>

                    <hr />

                    <!-- Variant Editing Section -->
                    <% product.variants.forEach((variant, index) => { %>
                    <form action="/admin/editProductVariant/<%= product._id %>/variant/<%= index %>" method="POST" enctype="multipart/form-data" class="variant-section" id="variant-section-<%= index %>" style="<%= index === 0 ? '' : 'display: none;' %>">
                      <h5>Variant <%= index + 1 %></h5>
                      <hr />

                      <!-- Variant Images -->
                      <label>Upload Variant Images</label>
                      <% for (let i = 0; i < 4; i++) { %>
                      <div class="row mb-3">
                        <div class="col-sm-6">
                          <input type="file" class="form-control" id="image<%= i %>" name="variantImages" accept="image/*" />
                        </div>
                        <div class="col-sm-6">
                          <div class="image-preview" id="preview-image<%= i %>" style="width: 150px; height: 150px; background-color: #f5f5f5; border: 1px solid #ddd; display: flex; align-items: center; justify-content: center;">
                            <img id="preview-img<%= i %>" src="<%= variant.images[i] || '' %>" alt="Image <%= i + 1 %>" style="width: 100%; height: 100%; object-fit: cover; display: <%= variant.images[i] ? 'block' : 'none' %>;" />
                            <% if (variant.images[i]) { %>
                            <button type="button" class="btn btn-danger remove-image position-absolute" data-index="<%= i %>">Remove</button>
                            <% } %>
                          </div>
                        </div>
                      </div>
                      <% } %>


                      <!-- Modal for Image Cropping -->
                      <div id="cropperModal" class="modal" tabindex="-1" role="dialog">
                        <div class="modal-dialog" role="document">
                          <div class="modal-content">
                            <div class="modal-header">
                              <h5 class="modal-title">Crop Image</h5>
                              <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                              </button>
                            </div>
                            <div class="modal-body">
                              <div class="crop-container">
                                <img id="cropperImage" src="" alt="Crop Image" style="max-width: 100%;" />
                              </div>
                            </div>
                            <div class="modal-footer">
                              <button type="button" id="cropImage" class="btn btn-primary">Crop</button>
                              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            </div>
                          </div>
                        </div>
                      </div>


                      <!-- Variant Details -->
                      <div class="row mb-3">
                        <div class="col-md-4">
                          <label for="storage-size">Storage Size</label>
                          <select class="form-control" name="storage">
                            <option value="<%= variant.storage %>"><%= variant.storage %></option>
                            <option value="64GB">64GB</option>
                            <option value="128GB">128GB</option>
                            <option value="256GB">256GB</option>
                          </select>
                        </div>
                        <div class="col-md-4">
                          <label for="color">Color</label>
                          <select class="form-control" name="color">
                            <option value="<%= variant.color %>"><%= variant.color %></option>
                            <option value="Black">Black</option>
                            <option value="White">White</option>
                          </select>
                        </div>
                        <div class="col-md-4">
                          <label for="quantity">Quantity</label>
                          <input type="number" class="form-control" name="quantity" value="<%= variant.stock %>" />
                        </div>
                      </div>

                      <!-- Pricing -->
                      <div class="row mb-3">
                        <div class="col-md-6">
                          <label for="regular-price">Regular Price</label>
                          <input type="number" class="form-control" name="regularPrice" value="<%= variant.regularPrice %>" />
                        </div>
                        <div class="col-md-6">
                          <label for="sale-price">Sale Price</label>
                          <input type="number" class="form-control" name="salePrice" value="<%= variant.salePrice %>" />
                        </div>
                      </div>

                      <!-- Submit Button -->
                      <div class="mb-3">
                        <button type="submit" class="btn btn-success">Update Variant</button>
                      </div>
                    </form>
                    <% }); %>

                    <!-- Navigation Buttons for Variants -->
                    <div class="row">
                      <div class="col-12 text-center">
                        <% product.variants.forEach((variant, index) => { %>
                        <button type="button" class="btn <%= index === 0 ? 'btn-primary' : 'btn-secondary' %> variant-btn" data-variant-index="<%= index %>">
                          Variant <%= index + 1 %>
                        </button>
                        <% }); %>
                      </div>
                    </div>


                  </div>

                </div>
              </div>
            </div>

          </div>
        </div>
        <!-- Content wrapper -->
      </div>
      <!-- / Layout page -->

    </div>
  </div>
  <!-- Overlay -->
  <div class="layout-overlay layout-menu-toggle"></div>
  </div>
  <!-- / Layout wrapper -->
  <!-- Core JS -->
  <!-- build:js assets/vendor/js/core.js -->
  <script src="/assets/vendor/libs/jquery/jquery.js"></script>
  <script src="/assets/vendor/libs/popper/popper.js"></script>
  <script src="/assets/vendor/js/bootstrap.js"></script>
  <script src="/assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js"></script>

  <script src="/assets/vendor/js/menu.js"></script>
  <!-- endbuild -->

  <!-- Vendors JS -->
  <script src="/assets/vendor/libs/apex-charts/apexcharts.js"></script>

  <!-- Main JS -->
  <script src="/assets/js/main.js"></script>

  <!-- Page JS -->
  <script src="/assets/js/dashboards-analytics.js"></script>

  <!-- Place this tag in your head or just before your close body tag. -->
  <script async defer src="https://buttons.github.io/buttons.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      // Get all variant forms and navigation buttons
      const variantForms = document.querySelectorAll('.variant-section');
      const variantButtons = document.querySelectorAll('.variant-btn');

      // Add click event listeners to each button
      variantButtons.forEach((button, index) => {
        button.addEventListener('click', () => {
          // Hide all forms and reset button styles
          variantForms.forEach((form) => {
            form.style.display = 'none';
          });
          variantButtons.forEach((btn) => {
            btn.classList.remove('btn-primary');
            btn.classList.add('btn-secondary');
          });

          // Show the selected variant form and highlight the button
          const targetForm = document.getElementById(`variant-section-${index}`);
          if (targetForm) {
            targetForm.style.display = 'block';
          }
          button.classList.remove('btn-secondary');
          button.classList.add('btn-primary');
        });
      });
    });
  </script>


  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const cropperModal = new bootstrap.Modal(document.getElementById('cropperModal'));
      let cropper;
      let currentImageIndex;
      let croppedImages = {};

      // Handle image input changes for variant images
      document.querySelectorAll('input[name="variantImages"]').forEach((input, index) => {
        input.addEventListener('change', function(event) {
          const file = event.target.files[0];
          if (file) {
            const reader = new FileReader();
            reader.onload = function(e) {
              document.getElementById('cropperImage').src = e.target.result; // Set image in modal
              cropperModal.show(); // Show the modal
              currentImageIndex = index;

              // Initialize or reinitialize Cropper.js
              if (cropper) cropper.destroy();
              cropper = new Cropper(document.getElementById('cropperImage'), {
                aspectRatio: 1,
                viewMode: 1,
              });
            };
            reader.readAsDataURL(file);
          }
        });
      });

      // Handle cropping logic
      document.getElementById('cropImage').addEventListener('click', function() {
        if (cropper) {
          const canvas = cropper.getCroppedCanvas({
            width: 500,
            height: 500,
          });

          // Convert cropped image to Blob and update the preview
          canvas.toBlob(function(blob) {
            const url = URL.createObjectURL(blob);
            const previewContainer = document.querySelectorAll('.image-preview img')[currentImageIndex];
            previewContainer.src = url;
            previewContainer.style.display = 'block';
            cropperModal.hide();
          }, 'image/jpeg');
        }
      });

      // Reset modal and cropper on close
      document.getElementById('cropperModal').addEventListener('hidden.bs.modal', function() {
        if (cropper) cropper.destroy();
        cropper = null;
      });

      // Remove image functionality
      document.querySelectorAll('.remove-image').forEach((button, index) => {
        button.addEventListener('click', function(event) {
          event.preventDefault(); // Prevent default form submission
          console.log(`Remove button clicked for image ${index}`);

          // Get the image preview and input field for the specific index
          const previewImg = document.querySelector(`#preview-img${index}`);
          const imageInput = document.querySelector(`#image${index}`);
          const previewContainer = document.querySelector(`#preview-image${index}`);

          // Check if the preview image exists before modifying
          if (previewImg) {
            previewImg.src = '';
            previewImg.style.display = 'none';
          }

          // Reset the background color of the preview container
          if (previewContainer) {
            previewContainer.style.backgroundColor = '#f5f5f5'; // Reset background color
          }

          // Clear the file input
          if (imageInput) {
            imageInput.value = ''; // Clear file input
          }

          // Send request to remove the image from the backend
          const productId = document.getElementById('productId').value; // Get the product ID

          fetch(`/admin/removeProductImage/${productId}/${index}`, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              }
            })
            .then(response => response.json())
            .then(data => {
              console.log('Image removed successfully from backend:', data);
            })
            .catch(error => {
              console.error('Error removing image from backend:', error);
            });
        });
      });
    });
  </script>




  <script>
    document.getElementById('color').addEventListener('change', function() {
      const customColorContainer = document.getElementById('custom-color-container');
      customColorContainer.style.display = this.value === 'custom' ? 'block' : 'none';
    });

    const formElement = document.querySelector('form');
    if (formElement) {
      formElement.onsubmit = validateForm;
    }
    // });

    function validateForm(event) {
      clearErrorMessages();

      // Getting form values
      const name = document.getElementsByName('productName')[0].value.trim();
      const description = document.getElementById('descriptionid').value.trim();
      const brand = document.getElementsByName('brand')[0].value.trim();
      const category = document.getElementsByName('category')[0].value.trim();
      const price = document.getElementsByName('regularPrice')[0].value.trim();
      const salePrice = document.getElementsByName('salePrice')[0].value.trim();
      const storageSize = document.getElementsByName('storage')[0].value.trim();
      const color = document.getElementsByName('color')[0].value.trim();
      const customColor = document.getElementById('custom-color').value.trim();
      const quantity = document.getElementsByName('quantity')[0].value.trim();
      const images = document.querySelectorAll('input[type="file"]');

      let isValid = true;

      if (name === "") {
        displayErrorMessage('productName-error', 'Please enter a product name.');
        isValid = false;
      }

      if (description === "") {
        displayErrorMessage('description-error', 'Please enter a product description.');
        isValid = false;
      }

      if (category === "") {
        displayErrorMessage('category-error', 'Please select a category.');
        isValid = false;
      }
      if (brand === "") {
        displayErrorMessage('brand-error', 'Please select a brand.');
        isValid = false;
      }

      if (quantity < 0 || quantity === "") {
        displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
        isValid = false;
      }

      if (price === "" || !/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) <= 0) {
        displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
        isValid = false;
      }

      if (salePrice !== "" && parseFloat(price) < parseFloat(salePrice)) {
        displayErrorMessage('salePrice-error', 'Regular price must be greater than sale price.');
        isValid = false;
      }

      if (color === "" && customColor === "") {
        displayErrorMessage('color-error', 'Please select or enter a color.');
        isValid = false;
      }

      let totalImagesSelected = 0;
      const imageInputs = document.querySelectorAll('input[type="file"][name^="image"]');

      imageInputs.forEach(function(imageInput) {
        totalImagesSelected += imageInput.files.length;
      });

      if (!isValid) {
        event.preventDefault();
      }

      return isValid;
    }

    function displayErrorMessage(elementId, message) {
      const errorElement = document.getElementById(elementId);
      errorElement.textContent = message;
      errorElement.style.display = "block";
    }

    function clearErrorMessages() {
      const errorElements = document.getElementsByClassName('error-message');
      Array.from(errorElements).forEach(element => {
        element.textContent = '';
        element.style.display = 'none';
      });
    }
  </script>


</body>

</html>