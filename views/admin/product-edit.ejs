<%- include('../../views/partials/admin/header') %>
<link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">

<body>
  <!-- Layout wrapper -->
  <div class="layout-wrapper layout-content-navbar">
    <div class="layout-container">

      <!-- Layout container -->
      <div class="layout-page">
        <!-- Navbar - Sidebar-->
        <%- include('../../views/partials/admin/sidebar') %>
        <%- include('../../views/partials/admin/navbar') %>

        <!-- Content wrapper -->
        <div class="content-wrapper">
          <!-- Content -->

          <div class="container">
            <h4 class="fw-bold py-3 mb-4">
              <span class="text-muted fw-light">Products /</span> Edit Product
            </h4>

            <!-- General Product Details -->
            <form action="/admin/editProduct/<%= product._id %>" method="POST">
              <% if (messages && messages.error) { %>
              <div class="alert alert-danger alert-dismissible fade show text-center" role="alert">
                <strong>Error:</strong> <%= messages.error %>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
              </div>
              <% } %>
              <% if (messages && messages.success) { %>
              <div class="alert alert-success alert-dismissible fade show text-center" role="alert">
                <strong>Success:</strong> <%= messages.success %>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
              </div>
              <% } %>
              <!-- Card Container -->
              <div class="card shadow-sm">
                <div class="card-header">
                  <h5>Product Details</h5>
                </div>
                <div class="card-body">
                  <div class="row">
                    <div class="col-md-6 mb-3">
                      <div id="productName-error" class="error-message text-danger"></div>
                      <label for="product-name">Product Name</label>
                      <input type="text" class="form-control" id="product-name" name="productName" value="<%= product.productName %>" placeholder="Enter Product Name" />
                    </div>
                    <div class="col-md-6 mb-3">
                      <div id="description-error" class="error-message text-danger"></div>
                      <label for="product-description">Product Description</label>
                      <textarea class="form-control" id="product-description" name="description" placeholder="Enter Product Description"><%= product.description %></textarea>
                    </div>
                  </div>

                  <!-- Category & Brand -->
                  <div class="row">
                    <div class="col-md-6 mb-3">
                      <div id="category-error" class="error-message text-danger"></div>
                      <label for="category-select">Select Category</label>
                      <select class="form-control" name="category">
                        <option value="<%= product.category %>"><%= categoryMap[product.category] %></option>
                        <% category.forEach((cat) => { %>
                        <option value="<%= cat._id %>"><%= cat.name %></option>
                        <% }); %>
                      </select>
                    </div>
                    <div class="col-md-6 mb-3">
                      <div id="brand-error" class="error-message text-danger"></div>
                      <label for="brand-select">Select Brand</label>
                      <select class="form-control" name="brand">
                        <option value="<%= product.brand %>"><%= product.brand %></option>
                        <% brand.forEach((b) => { %>
                        <option value="<%= b.brandName %>"><%= b.brandName %></option>
                        <% }); %>
                      </select>
                    </div>
                  </div>
                </div>

                <div class="card-footer text-center">
                  <button type="submit" class="btn btn-primary">Update Product Details</button>
                </div>
              </div>
            </form>

            <hr />

            <!-- Existing Variants Section -->
            <!-- Variant Navigation Buttons -->
            <div class="row mb-4">
              <div class="col-12 text-center">
                <a href="#new-variant-form">
                  <button id="add-new-variant-btn" class="btn btn-sm btn-dark me-3">Add New Variant</button></a>
                <% product.variants.forEach((variant, index) => { %>
                <button type="button" class="btn btn-sm justify-content-center m-2 <%= index === 0 ? 'btn-primary' : 'btn-secondary' %> variant-btn" data-variant-index="<%= index %>">
                  Variant <%= index + 1 %>
                </button>
                <% }); %>
              </div>
            </div>

            <!-- Variant Forms -->
            <div id="variants-container">
              <% product.variants.forEach((variant, index) => { %>
              <div class="card mb-4" id="variant-section-<%= index %>" style="<%= index === 0 ? '' : 'display: none;' %>">
                <div class="card-header">
                  <h5>Variant <%= index + 1 %> Deatils</h5>
                </div>
                <div class="card-body">
                  <form id="edit-variant-form<%= index %>" data-index="<%= index %>" action="/admin/editProductVariant/<%= product._id %>/variant/<%= index %>" method="POST" enctype="multipart/form-data">
                    <!-- Variant Images -->
                    <label class="mb-2">Variant Images</label>
                    <% for (let i = 0; i < 4; i++) { %>
                    <% if (i % 2 === 0) { %>
                    <div class="row mb-3">
                      <% } %>
                      <div class="col-sm-3">
                        <input type="file" class="form-control" id="image-<%= index %>-<%= i %>" name="variantImages" accept="image/*" />
                      </div>
                      <div class="col-sm-3">
                        <div class="image-preview" id="preview-image-<%= index %>-<%= i %>" style="width: 150px; height: 150px; background-color: #f5f5f5; border: 1px solid #ddd; display: flex; align-items: center; justify-content: center;">
                          <img id="preview-img-<%= index %>-<%= i %>" src="<%= variant.images[i] || '' %>" alt="Image <%= i + 1 %>" style="width: 100%; height: 100%; object-fit: cover; display: <%= variant.images[i] ? 'block' : 'none' %>;" />
                          <% if (variant.images[i]) { %>
                          <button type="button" class="btn btn-sm btn-danger remove-image position-absolute" data-index="<%= i %>" data-variant-index="<%= index %>" data-product-id="<%= product._id %>" id="remove-image-<%= index %>-<%= i %>">
                            Remove
                          </button>
                          <% } %>
                        </div>
                      </div>
                      <% if (i % 2 === 1 || i === 3) { %>
                    </div>
                    <% } %>
                    <% } %>

                    <!-- Variant Details -->
                    <div class="row mb-3">
                      <div class="col-md-4">
                        <div id="size-error" class="error-message text-danger"></div>
                        <label for="storage-size">Storage Size</label>
                        <input type="text" class="form-control" id="storage-size" name="storage" value="<%= variant.storage %>" placeholder="Enter Storage Size (e.g., 64GB)" list="storage-options" oninput="this.value = this.value.toUpperCase().replace(/\s+/g, '')" />
                        <datalist id="storage-options">
                          <option value="NA"></option>
                          <option value="64GB"></option>
                          <option value="128GB"></option>
                          <option value="256GB"></option>
                          <option value="512GB"></option>
                          <option value="1024GB"></option>
                        </datalist>
                      </div>
                      <div class="col-md-4">
                        <div id="color-error" class="error-message text-danger"></div>
                        <label for="color">Color</label>
                        <input type="text" class="form-control" id="color" name="color" value="<%= variant.color %>" placeholder="Enter color (e.g., Black, White)" list="color-options" oninput="this.value = this.value.toUpperCase()" />
                        <datalist id="color-options">
                          <option value="BLACK"></option>
                          <option value="WHITE"></option>
                          <option value="BLUE"></option>
                          <option value="RED"></option>
                          <option value="GREEN"></option>
                          <option value="YELLOW"></option>
                        </datalist>
                      </div>
                      <div class="col-md-4">
                        <div id="quantity-error" class="error-message text-danger"></div>
                        <label for="quantity">Quantity</label>
                        <input type="number" class="form-control" name="quantity" value="<%= variant.stock %>" />
                      </div>
                    </div>
                    <div class="row mb-3">
                      <div class="col-md-6">
                        <div id="regularPrice-error" class="error-message text-danger"></div>
                        <label for="regular-price">Regular Price</label>
                        <input type="number" class="form-control" name="regularPrice" value="<%= variant.regularPrice %>" />
                      </div>
                      <div class="col-md-6">
                        <div id="salePrice-error" class="error-message text-danger"></div>
                        <label for="sale-price">Sale Price</label>
                        <input type="number" class="form-control" name="salePrice" value="<%= variant.salePrice %>" />
                      </div>
                    </div>

                    <div class="d-flex justify-content-center gap-3">
                      <button type="submit" class="btn btn-success">Update Variant</button>
                      <button type="button" class="btn btn-secondary hide-variant-btn" data-variant-index="<%= index %>">Hide</button>
                    </div>
                  </form>
                </div>
              </div>
              <% }); %>
            </div>


            <hr />


            <!-- Add New Variant Section -->
            <div class="card" id="new-variant-form-card">
              <div class="card-header">
                <h5>New Variant</h5>
              </div>
              <div class="card-body">
                <form id="new-variant-form" data-index="new" action="/admin/addProductVariant/<%= product._id %>" method="POST" enctype="multipart/form-data">
                  <hr />
                  <% for (let i = 0; i < 4; i++) { %>
                  <!-- File Input for Images -->
                  <% if (i % 2 === 0) { %>
                  <div class="row mb-3">
                    <% } %>
                    <div class="col-md-3">
                      <input type="file" class="form-control" id="new-image-<%= i %>" name="variantImages" accept="image/*" />
                    </div>
                    <div class="col-md-3">
                      <div class="image-preview" id="new-preview-image-<%= i %>" style="width: 150px; height: 150px; background-color: #f5f5f5; border: 1px solid #ddd; display: flex; align-items: center; justify-content: center;">
                        <img id="new-preview-img-<%= i %>" src="" alt="New Image <%= i + 1 %>" style="width: 100%; height: 100%; object-fit: cover; display: none;" />
                      </div>
                    </div>
                    <% if (i % 2 === 1 || i === 3) { %>
                  </div>
                  <% } %>
                  <% } %>

                  <!-- Variant Details -->
                  <div class="row mb-3">
                    <div class="col-md-4">
                      <div id="size-error" class="error-message text-danger"></div>
                      <label for="new-storage-size">Storage Size</label>
                      <input type="text" class="form-control" id="storage-size" name="storage" placeholder="Enter Storage Size (e.g., 64GB)" list="storage-options" oninput="this.value = this.value.toUpperCase().replace(/\s+/g, '')" />
                      <datalist id="storage-options">
                        <option value="NA"></option>
                        <option value="64GB"></option>
                        <option value="128GB"></option>
                        <option value="256GB"></option>
                        <option value="512GB"></option>
                        <option value="1024GB"></option>
                      </datalist>
                    </div>
                    <div class="col-md-4">
                      <div id="color-error" class="error-message text-danger"></div>
                      <label for="new-color">Color</label>
                      <input type="text" class="form-control" id="color" name="color" placeholder="Enter color (e.g., Black, White)" list="color-options" oninput="this.value = this.value.toUpperCase()" />
                      <datalist id="color-options">
                        <option value="BLACK"></option>
                        <option value="WHITE"></option>
                        <option value="BLUE"></option>
                        <option value="RED"></option>
                        <option value="GREEN"></option>
                        <option value="YELLOW"></option>
                      </datalist>
                    </div>
                    <div class="col-md-4">
                      <div id="quantity-error" class="error-message text-danger"></div>
                      <label for="new-quantity">Quantity</label>
                      <input type="number" class="form-control" name="quantity" placeholder="Enter Quantity" />
                    </div>
                  </div>

                  <div class="row mb-3">
                    <div class="col-md-6">
                      <div id="regularPrice-error" class="error-message text-danger"></div>
                      <label for="new-regular-price">Regular Price</label>
                      <input type="number" class="form-control" name="regularPrice" placeholder="Enter Regular Price" />
                    </div>
                    <div class="col-md-6">
                      <div id="salePrice-error" class="error-message text-danger"></div>
                      <label for="new-sale-price">Sale Price</label>
                      <input type="number" class="form-control" name="salePrice" placeholder="Enter Sale Price" />
                    </div>
                  </div>

                  <div class="d-flex justify-content-center m-2 mx-4">
                    <button type="submit" class="btn btn-success me-2">Save New Variant</button>
                    <button type="button" id="cancel-new-variant-btn" class="btn btn-secondary">Cancel</button>
                  </div>
                </form>
              </div>
            </div>

            <!-- Modal for Image Cropping -->
            <div id="cropperModal" class="modal" tabindex="-1" role="dialog">
              <div class="modal-dialog" role="document">
                <div class="modal-content">
                  <div class="modal-header">
                    <h5 class="modal-title">Crop Image</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                      <span aria-hidden="true">&times;</span>
                    </button>
                  </div>
                  <div class="modal-body">
                    <div class="crop-container">
                      <img id="cropperImage" src="" alt="Crop Image" style="max-width: 100%;" />
                    </div>
                  </div>
                  <div class="modal-footer">
                    <button type="button" id="cropImage" class="btn btn-primary">Crop</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <!-- Content wrapper -->
      </div>
      <!-- / Layout page -->

    </div>
  </div>
  <!-- Overlay -->
  <div class="layout-overlay layout-menu-toggle"></div>
  </div>
  <!-- / Layout wrapper -->
  <!-- Core JS -->
  <!-- build:js assets/vendor/js/core.js -->
  <script src="/assets/vendor/libs/jquery/jquery.js"></script>
  <script src="/assets/vendor/libs/popper/popper.js"></script>
  <script src="/assets/vendor/js/bootstrap.js"></script>
  <script src="/assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js"></script>

  <script src="/assets/vendor/js/menu.js"></script>
  <!-- endbuild -->

  <!-- Vendors JS -->
  <script src="/assets/vendor/libs/apex-charts/apexcharts.js"></script>

  <!-- Main JS -->
  <script src="/assets/js/main.js"></script>

  <!-- Page JS -->
  <script src="/assets/js/dashboards-analytics.js"></script>

  <!-- Place this tag in your head or just before your close body tag. -->
  <script async defer src="https://buttons.github.io/buttons.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const variantButtons = document.querySelectorAll('.variant-btn');
      const variantSections = document.querySelectorAll('[id^="variant-section-"]');
      const addNewVariantBtn = document.getElementById('add-new-variant-btn');
      const newVariantForm = document.getElementById('new-variant-form-card');
      const cancelNewVariantBtn = document.getElementById('cancel-new-variant-btn');
      const hideVariantButtons = document.querySelectorAll('.hide-variant-btn');
      const newVariantAdditionalSection = document.getElementById('new-variant-additional-section');

      function showVariant(variantIndex) {
        variantSections.forEach((section, index) => {
          section.style.display = (index == variantIndex) ? 'block' : 'none';
        });

        variantButtons.forEach((button, index) => {
          button.classList.toggle('btn-primary', index == variantIndex);
          button.classList.toggle('btn-secondary', index != variantIndex);
        });

        newVariantForm.style.display = 'none';
        newVariantAdditionalSection.style.display = 'none';
      }

      function hideVariant(variantIndex) {
        document.getElementById(`variant-section-${variantIndex}`).style.display = 'none';
      }

      showVariant(0);

      variantButtons.forEach((button, index) => {
        button.addEventListener('click', () => showVariant(index));
      });

      addNewVariantBtn.addEventListener('click', function() {
        newVariantForm.style.display = 'block';
      });

      cancelNewVariantBtn.addEventListener('click', function() {
        newVariantForm.style.display = 'none';
        showVariant(0);
      });

      hideVariantButtons.forEach((button) => {
        button.addEventListener('click', function() {
          const variantIndex = button.getAttribute('data-variant-index');
          hideVariant(variantIndex);
        });
      });
    });
  </script>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const cropperModal = new bootstrap.Modal(document.getElementById('cropperModal'));
      let cropper;
      let currentImageIndex;
      let croppedImages = {};

      document.querySelectorAll('input[name="variantImages"]').forEach((input, index) => {
        input.addEventListener('change', function(event) {
          const file = event.target.files[0];
          if (file) {
            const reader = new FileReader();
            reader.onload = function(e) {
              document.getElementById('cropperImage').src = e.target.result;
              cropperModal.show();
              currentImageIndex = index;

              if (cropper) cropper.destroy();
              cropper = new Cropper(document.getElementById('cropperImage'), {
                aspectRatio: 1,
                viewMode: 1,
              });
            };
            reader.readAsDataURL(file);
          }
        });
      });

      document.getElementById('cropImage').addEventListener('click', function() {
        if (cropper) {
          const canvas = cropper.getCroppedCanvas({
            width: 500,
            height: 500,
          });

          canvas.toBlob(function(blob) {
            const url = URL.createObjectURL(blob);
            const previewContainer = document.querySelectorAll('.image-preview img')[currentImageIndex];
            previewContainer.src = url;
            previewContainer.style.display = 'block';
            cropperModal.hide();
          }, 'image/jpeg');
        }
      });

      document.getElementById('cropperModal').addEventListener('hidden.bs.modal', function() {
        if (cropper) cropper.destroy();
        cropper = null;
      });
    });
  </script>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      console.log('Document loaded, attaching remove buttons functionality');
      const removeButtons = document.querySelectorAll('.remove-image');

      if (removeButtons.length === 0) {
        console.log("No remove buttons found, skipping event listener attachment");
      } else {
        removeButtons.forEach((button) => {
          button.addEventListener('click', function(event) {
            event.preventDefault();

            const index = button.getAttribute('data-index');
            const variantIndex = button.getAttribute('data-variant-index');
            console.log(`Removing image at variant ${variantIndex} index ${index}`);

            const previewImg = document.querySelector(`#preview-img-${variantIndex}-${index}`);
            const imageInput = document.querySelector(`#new-image-${variantIndex}-${index}`);
            const previewContainer = document.querySelector(`#preview-image-${variantIndex}-${index}`);

            if (previewImg) {
              previewImg.src = '';
              previewImg.style.display = 'none';
            }

            if (previewContainer) {
              previewContainer.style.backgroundColor = '#f5f5f5';
            }

            if (imageInput) {
              imageInput.value = '';
            }

            const productId = button.getAttribute('data-product-id');
            const url = `/admin/removeProductImage/${productId}/${variantIndex}/${index}`;

            fetch(url, {
              method: 'DELETE',
              headers: {
                'Content-Type': 'application/json',
              },
            }).then(response => {
              console.log('Fetch executed');
              if (!response.ok) {
                throw new Error(`Network response was not ok: ${response.statusText}`);
              }
              return response.json();
            }).then(data => {
              console.log('Image removed successfully from backend:', data);
              button.style.display = 'none';
            }).catch(error => {
              console.error('Error removing image from backend:', error);
            });

          });
        });
      }
    });
  </script>
  <script>
    const form = document.querySelector('form[action="/admin/editProduct/<%= product._id %>"]');

    if (form) {
      form.addEventListener('submit', function(event) {
        clearErrorMessages();

        let isValid = true;

        const productName = document.getElementById('product-name').value.trim();
        const productDescription = document.getElementById('product-description').value.trim();
        const category = document.querySelector('select[name="category"]').value;
        const brand = document.querySelector('select[name="brand"]').value;

        if (!productName || productName.length > 60) {
          isValid = false;
          document.getElementById('productName-error').textContent = 'Product Name is required and should be less than 60 characters.';
        }

        if (!productDescription || productDescription.length > 500) {
          isValid = false;
          document.getElementById('description-error').textContent = 'Product Description is required and should be less than 500 characters.';
        }

        if (!category) {
          isValid = false;
          document.getElementById('category-error').textContent = 'Category is required.';
        }

        if (!brand) {
          isValid = false;
          document.getElementById('brand-error').textContent = 'Brand is required.';
        }

        if (!isValid) {
          event.preventDefault();
        }
      });
    }

    function clearErrorMessages() {
      document.getElementById('productName-error').textContent = '';
      document.getElementById('description-error').textContent = '';
      document.getElementById('category-error').textContent = '';
      document.getElementById('brand-error').textContent = '';
    }

    document.addEventListener('DOMContentLoaded', function() {
      function validateForm(form) {
        let isValid = true;

        function validateInput(input, errorElement, errorMessage) {
          if (!input.value.trim()) {
            errorElement.textContent = errorMessage;
            isValid = false;
          } else {
            errorElement.textContent = '';
          }
        }

        function validatePositiveNumber(input, errorElement, errorMessage) {
          if (!input.value.trim() || input.value <= 0) {
            errorElement.textContent = errorMessage;
            isValid = false;
          } else {
            errorElement.textContent = '';
          }
        }

        function validatePrice(regularPriceInput, salePriceInput, regularPriceError, salePriceError) {
          if (!regularPriceInput.value.trim()) {
            regularPriceError.textContent = 'Regular Price is required';
            isValid = false;
          } else if (parseFloat(regularPriceInput.value) < 0) {
            regularPriceError.textContent = 'Regular Price cannot be negative';
            isValid = false;
          } else {
            regularPriceError.textContent = '';
          }

          if (!salePriceInput.value.trim()) {
            salePriceError.textContent = 'Sale Price is required';
            isValid = false;
          } else if (parseFloat(salePriceInput.value) < 0) {
            salePriceError.textContent = 'Sale Price cannot be negative';
            isValid = false;
          } else if (parseFloat(salePriceInput.value) > parseFloat(regularPriceInput.value)) {
            salePriceError.textContent = 'Sale Price cannot be greater than Regular Price';
            isValid = false;
          } else {
            salePriceError.textContent = '';
          }
        }

        const storageInput = form.querySelector('[name="storage"]');
        const storageError = form.querySelector('#size-error');
        validateInput(storageInput, storageError, 'Storage Size is required');

        const colorInput = form.querySelector('[name="color"]');
        const colorError = form.querySelector('#color-error');
        validateInput(colorInput, colorError, 'Color is required');

        const quantityInput = form.querySelector('[name="quantity"]');
        const quantityError = form.querySelector('#quantity-error');
        validatePositiveNumber(quantityInput, quantityError, 'Quantity must be a positive number');

        const regularPriceInput = form.querySelector('[name="regularPrice"]');
        const regularPriceError = form.querySelector('#regularPrice-error');
        const salePriceInput = form.querySelector('[name="salePrice"]');
        const salePriceError = form.querySelector('#salePrice-error');
        validatePrice(regularPriceInput, salePriceInput, regularPriceError, salePriceError);

        return isValid;
      }

      const forms = document.querySelectorAll('form[data-index]');

      forms.forEach(form => {
        form.addEventListener('submit', function(e) {
          if (!validateForm(form)) {
            e.preventDefault();
          }
        });
      });
    });
  </script>



</body>

</html>