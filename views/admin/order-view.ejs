<link rel="stylesheet" href="/css/admin-table-style.css">
<link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">

<%- include('../../views/partials/admin/header') %>

<body>
  <!-- Layout wrapper -->
  <div class="layout-wrapper layout-content-navbar">
    <div class="layout-container">

      <!-- Layout container -->
      <div class="layout-page">
        <!-- Navbar - Sidebar-->
        <%- include('../../views/partials/admin/sidebar') %>
        <%- include('../../views/partials/admin/navbar') %>

        <!-- Content wrapper -->
        <div class="content-wrapper">
          <!-- Content -->

          <div class="container-xxl flex-grow-1 container-p-y">
            <h4 class="fw-bold py-3 mb-4"><span class="text-muted fw-light">Products/</span> View Orders</h4>

            <!-- Basic Layout -->
            <div class="container order-details">
              <h2>Order Details</h2>

              <% if (!order) { %>
              <div class="alert alert-danger"><%= message %></div>
              <% } else { %>
              <!-- General Order Information -->
              <div class="card mb-4">
                <div class="card-body">
                  <h5 class="card-title">Order ID: <%= order.refId %></h5>
                  <p><strong>Order Date:</strong> <%= new Date(order.orderDate).toLocaleString() %></p>
                  <p><strong>Status:</strong> <span class="badge bg-primary"><%= order.status %></span></p>
                  <p><strong>Total Price:</strong> ₹<%= order.totalPrice %></p>
                  <p><strong>Final Amount:</strong> ₹<%= order.finalAmount %></p>
                  <p><strong>Payment Method:</strong> <%= order.paymentMethod %></p>
                  <p><strong>Payment Status:</strong> <span class="badge bg-<%= order.paymentStatus === 'Pending' ? 'warning' : 'success' %>"><%= order.paymentStatus %></span></p>
                  <p><strong>User:</strong> <%= order.user.name %> (<%= order.user.email %>)</p>
                </div>
              </div>

              <!-- Order Items Table -->
              <h4>Order Items</h4>
              <table class="table table-bordered">
                <thead>
                  <tr>
                    <th>Product Name</th>
                    <th>Variant</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    <th>Status</th>
                    <th>Actions</th>
                  </tr>
                </thead>
                <tbody>
                  <% order.items.forEach(item => { %>
                  <tr>
                    <td><%= item.productName %></td>
                    <td><%= item.variantDetails.color %>, <%= item.variantDetails.size %></td>
                    <td><%= item.quantity %></td>
                    <td>₹<%= item.variantDetails.price %></td>
                    <td>
                      <% 
                        let badgeClass;
                        switch(item.itemStatus) {
                          case 'Pending':
                          case 'Processing':
                            badgeClass = 'info';
                            break;
                          case 'Placed':
                            badgeClass = 'primary';
                            break;
                          case 'Shipped':
                            badgeClass = 'secondary';
                            break;
                          case 'Delivered':
                            badgeClass = 'success';
                            break;
                          case 'Cancelled':
                          case 'Cancel Request':
                          case 'Partial Cancellation':
                            badgeClass = 'danger';
                            break;
                          case 'Return Request':
                          case 'Returned':
                          case 'Partial Return':
                            badgeClass = 'warning';
                            break;
                          default:
                            badgeClass = 'light';
                        }
                      %>
                      <span class="badge bg-<%= badgeClass %>"><%= item.itemStatus %></span>
                    </td>

                    <td>
                      <!-- Dropdown to update status -->
                      <select class="form-select form-select-sm" onchange="updateItemStatus('<%= order.orderId %>', '<%= item.productId %>', <%= item.variantIndex %>, this.value)">
                        <option value="Pending" <%= item.itemStatus === 'Pending' ? 'selected' : '' %>>Pending</option>
                        <option value="Shipped" <%= item.itemStatus === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                        <option value="Delivered" <%= item.itemStatus === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                        <option value="Cancelled" <%= item.itemStatus === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
                        <option value="Returned" <%= item.itemStatus === 'Returned' ? 'selected' : '' %>>Retured</option>
                      </select>
                    </td>
                  </tr>
                  <% }) %>
                </tbody>
              </table>

              <!-- General Buttons -->
              <div class="mt-4">
                <button class="btn btn-primary" onclick="updateOrderStatus('<%= order.orderId %>', 'Shipped')">Mark as Shipped</button>
                <button class="btn btn-success" onclick="updateOrderStatus('<%= order.orderId %>', 'Delivered')">Mark as Delivered</button>
              </div>
              <% } %>
            </div>

          </div>
          <!-- Content wrapper -->
        </div>
        <!-- / Layout page -->
      </div>
    </div>
    <!-- Overlay -->
    <div class="layout-overlay layout-menu-toggle"></div>
  </div>
  <!-- / Layout wrapper -->

  <%- include('../../views/partials/admin/footer') %>

  <script>
    // Function to update item status
    async function updateItemStatus(orderId, productId, variantIndex, newStatus) {
      const confirmation = await Swal.fire({
        title: `Confirm Status Change`,
        text: `Are you sure you want to update the status to "${newStatus}"?`,
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes, update it!"
      });

      if (!confirmation.isConfirmed) return; {
        try {
          const response = await fetch(`/admin/orders/${orderId}/update-item-status`, {
            method: 'PATCH',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              productId,
              variantIndex,
              newStatus,
            }),
          });

          const data = await response.json();

          if (data.success) {
            Swal.fire({
              icon: 'success',
              title: 'Success!',
              text: data.message || 'Item status updated successfully!',
              confirmButtonText: 'OK',
            }).then(() => {
              location.reload();
            });
          } else {
            Swal.fire({
              icon: 'error',
              title: 'Error!',
              text: data.error || 'Failed to update item status. Please try again.',
              confirmButtonText: 'OK',
            });
          }
        } catch (error) {
          console.error('Error:', error);
          Swal.fire({
            icon: 'error',
            title: 'Error!',
            text: 'An error occurred. Please try again.',
            confirmButtonText: 'OK',
          });
        }
      }
    }

    function updateOrderStatus(orderId, newStatus) {
      if (!confirm(`Are you sure you want to change order status to "${newStatus}"?`)) return;

      fetch('/admin/orders/update-status', {
          method: 'PATCH',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            orderId,
            newStatus
          })
        })
        .then(response => response.json())
        .then(data => {
          if (data.error) {
            console.error('Error:', data.error);
            Swal.fire({
              icon: 'error',
              title: 'Error!',
              text: 'An error occurred. Please try again.',
              confirmButtonText: 'OK',
            });
          } else {
            Swal.fire({
              icon: 'success',
              title: 'Success!',
              text: data.message || 'Item status updated successfully!',
              confirmButtonText: 'OK',
            }).then(() => {
              location.reload();
            });
          }
        })
        .catch(error => {
          console.error('Error:', error);
          Swal.fire({
            icon: 'error',
            title: 'Error!',
            text: 'An error occurred. Please try again.',
            confirmButtonText: 'OK',
          });
        });
    }
  </script>