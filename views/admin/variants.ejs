<link rel="stylesheet" href="/css/admin-table-style.css">
<link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">

<%- include('../../views/partials/admin/header') %>

<body>
  <!-- Layout wrapper -->
  <div class="layout-wrapper layout-content-navbar">
    <div class="layout-container">

      <!-- Layout container -->
      <div class="layout-page">
        <!-- Navbar - Sidebar-->
        <%- include('../../views/partials/admin/sidebar') %>
        <%- include('../../views/partials/admin/navbar') %>

        <!-- Content wrapper -->
        <div class="content-wrapper">
          <!-- Content -->

          <div class="container-xxl flex-grow-1 container-p-y">
            <h4 class="fw-bold py-3 mb-4"><span class="text-muted fw-light">Products/</span> View Variants</h4>

            <!-- Basic Layout -->
            <div class="col-xxl">
              <div class="card mb-4">
                <div class="card-body">
                  <% if (messages && messages.error) { %>
                  <div class="alert alert-danger alert-dismissible fade show text-center" role="alert">
                    <strong>Error:</strong> <%= messages.error %>
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                  </div>
                  <% } %>
                  <% if (messages && messages.success) { %>
                  <div class="alert alert-success alert-dismissible fade show text-center" role="alert">
                    <strong>Success:</strong> <%= messages.success %>
                    <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                  </div>
                  <% } %>
                </div>
                <!-- Basic Bootstrap Table -->
                <div class="card" id="view-category-section">
                  <h5 class="card-header">View Variants</h5>
                  <div class="table-responsive text-nowrap">
                    <table class="table">
                      <thead>
                        <tr>
                          <th>Product Name</th>
                          <th>Regular Price</th>
                          <th>Sale Price</th>
                          <th>Color</th>
                          <th>Size</th>
                          <th>Stock</th>
                          <th>Actions</th>
                        </tr>
                      </thead>
                      <tbody>
                        <% productData.forEach(product => { %>
                        <tr>
                          <td><%= product.productName %></td>
                          <td><%= product.regularPrice %></td>
                          <td><%= product.salePrice %></td>
                          <td><%= product.color %></td>
                          <td><%= product.size %></td>
                          <td><%= product.stock %></td>
                          <td>
                            <button class="btn btn-primary" onclick="openUpdateForm('<%= product.productId %>', '<%= product.variantIndex %>', '<%= product.salePrice %>', '<%= product.regularPrice %>', '<%= product.stock %>')">Update</button>
                          </td>
                        </tr>
                        <!-- Update Form Modal -->
                        <div id="variantUpdateModal" class="modal variant-modal" style="display:none;">
                          <div class="modal-content">
                            <span class="close" onclick="closeUpdateForm()">&times;</span>
                            <h3>Update Variant</h3>

                            <input type="hidden" id="updateProductId">
                            <input type="hidden" id="updateVariantIndex">
                            <label for="salePrice">Sale Price</label>
                            <input type="number" id="updateSalePrice" name="updateSalePrice" placeholder="Sale Price" required>
                            <label for="">Regular Price</label>
                            <input type="number" id="updateRegularPrice" name="updateRegularPrice" placeholder="Regular Price" required>
                            <label for="">Stock</label>
                            <input type="number" id="updateStock" placeholder="Stock" name="updateStock" required>
                            <button onclick="submitUpdate()">Submit</button>
                          </div>
                        </div>
                        <% }); %>
                      </tbody>
                    </table>
                  </div>
                </div>

                <!-- / Content -->
              </div>
              <div class="container-xxl flex-grow-1 container-p-y d-flex justify-content-center align-items-center">
                <nav aria-label="User Pagination">
                  <ul class="pagination justify-content-center">
                    <!-- Previous Button -->
                    <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
                      <a class="page-link" href="<%= currentPage > 1 ? '?search=' + searchQuery + '&page=' + (Number(currentPage)  - 1) : '#' %>" tabindex="-1">
                        Previous
                      </a>
                    </li>
                    <% for (let i = 1; i <= totalPages; i++) { %>
                    <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                      <a class="page-link" href="<%= i === currentPage ? '#' : '?search=' + searchQuery + '&page=' + i %>">
                        <%= i %>
                      </a>
                    </li>
                    <% } %>
                    <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
                      <a class="page-link" href="<%= currentPage < totalPages ? '?search=' + searchQuery + '&page=' + (Number(currentPage)  + 1) : '#' %>">
                        Next
                      </a>
                    </li>
                  </ul>
                </nav>
              </div>
            </div>
          </div>
          <!-- Content wrapper -->
        </div>
        <!-- / Layout page -->
      </div>
    </div>
    <!-- Overlay -->
    <div class="layout-overlay layout-menu-toggle"></div>
  </div>
  <!-- / Layout wrapper -->
  <%- include('../../views/partials/admin/footer') %>

  <!-- Place this tag in your head or just before your close body tag. -->
  <script async defer src="https://buttons.github.io/buttons.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>
  <script>
    async function addOffer(productId) {
      const {
        value: amount
      } = await Swal.fire({
        title: 'Offer in percentage',
        input: 'number',
        inputLabel: 'percentage',
        inputPlaceholder: '%'
      })

      $.ajax({
        url: '/admin/addProductOffer',
        method: 'post',
        data: {
          percentage: amount,
          productId: productId
        },
        success: (response) => {
          if (response.status === true) {
            location.reload();
            Swal.fire('Offer Added', 'The offer has been removed', 'success')
          } else {
            aler('failed');
          }
        }
      })
    }

    function removeOffer(productId) {
      Swal.fire({
          title: 'Remove Offer',
          text: 'Are you sure want to remove offer?',
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#3085d6',
          cancelButtonColor: 'd33',
          confirmButtonText: 'Yes remove it',
          timer: 5000,
          timeProgressBaer: true
        })
        .then(async (result) => {
          if (result.isConfirmed) {
            $.ajax({
              url: '/admin/removeProductOffer',
              method: 'post',
              data: {
                productId: productId
              },
              success: (response) => {
                if (response.status === true) {
                  Swal.fire('Offer Removed', 'The offer has been removed', 'success');
                  location.reload();
                } else if (response.status === false) {
                  Swal.fire('Failed');
                } else {
                  aler('failed');
                }
              }
            })
          }
        })
        .catch((error) => {
          console.error(error);
        })
    }
  </script>

  <script>
    function updateProductStatus(productId, isBlocked) {
      fetch('/admin/product/' + (isBlocked ? 'block' : 'unblock'), {
          method: 'PATCH',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            id: productId,
            isBlocked: isBlocked
          })
        })
        .then(response => response.json())
        .then(data => {
          Swal.fire({
            icon: 'success',
            title: data.message,
          }).then(() => {
            window.location.reload();
          });
        })
        .catch(error => {
          console.error('Error:', error);
          Swal.fire({
            icon: 'error',
            title: 'An error occurred!',
            text: error.message,
          });
        });
    }
  </script>

  <script>
    function openUpdateForm(productId, variantIndex, salePrice, regularPrice, stock) {
      document.getElementById('updateProductId').value = productId;
      document.getElementById('updateVariantIndex').value = variantIndex;
      document.getElementById('updateSalePrice').value = salePrice;
      document.getElementById('updateRegularPrice').value = regularPrice;
      document.getElementById('updateStock').value = stock;
      document.getElementById('variantUpdateModal').style.display = 'block';
    }

    function closeUpdateForm() {
      document.getElementById('variantUpdateModal').style.display = 'none';
    }
    async function submitUpdate() {
      const productId = document.getElementById('updateProductId').value;
      const variantIndex = document.getElementById('updateVariantIndex').value;
      const salePrice = document.getElementById('updateSalePrice').value;
      const regularPrice = document.getElementById('updateRegularPrice').value;
      const stock = document.getElementById('updateStock').value;

      const response = await fetch('/admin/updateVariant', {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          productId,
          variantIndex,
          salePrice,
          regularPrice,
          stock
        })
      });

      const result = await response.json();
      closeUpdateForm();
      console.log(result)
      Swal.fire({
        title: result.status ? 'Success!' : 'Error!',
        text: result.message,
        icon: result.status ? 'success' : 'error',
        confirmButtonText: 'OK'
      }).then(() => {
        if (result.success) location.reload();
      });
    }
  </script>
