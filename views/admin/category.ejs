<%- include('../../views/partials/admin/header') %>

<body>
  <!-- Layout wrapper -->
  <div class="layout-wrapper layout-content-navbar">
    <div class="layout-container">


      <!-- Layout container -->
      <div class="layout-page">
        <!-- Navbar - Sidebar-->
        <%- include('../../views/partials/admin/sidebar') %>
        <%- include('../../views/partials/admin/navbar') %>

        <!-- Content wrapper -->
        <div class="content-wrapper">
          <!-- Content -->

          <div class="container-xxl flex-grow-1 container-p-y">
            <h4 class="fw-bold py-3 mb-4"><span class="text-muted fw-light">Categories</span> </h4>

            <!-- Basic Layout -->
            <div class="col-xxl">
              <div class="card mb-4">
                <div class="card-header d-flex align-items-center justify-content-between">
                  <h5 class="mb-0">Add New Category</h5>
                </div>
                <div class="card-body">
                  <form onsubmit="return handleFormSubmit(event)">
                    <div class="row mb-3">
                      <div class="text-danger error-message" id="name-error" style="display: none;"></div>
                      <label class="col-sm-2 col-form-label" for="basic-default-name">Name</label>
                      <div class="col-sm-10">
                        <input type="text" class="form-control" id="basic-default-name" placeholder="Enter category name" name="name" />
                      </div>
                    </div>
                    <div class="row mb-3 align-items-center">
                      <div class="text-danger error-message" id="description-error" style="display: none;"></div>
                      <label class="col-md-2 col-form-label" for="basic-default-message">Message</label>
                      <div class="col-md-8">
                        <textarea id="basic-default-message" class="form-control" placeholder="Enter catehory description" aria-label="Hi, Do you have a moment to talk Joe?" aria-describedby="basic-icon-default-message2" name="description"></textarea>
                      </div>
                      <div class="col-md-2 text-end mt-1">
                        <button type="submit" class="btn btn-primary w-100">Create New Category</button>
                      </div>
                    </div>
                  </form>
                </div>
              </div>
            </div>

            <!-- Basic Bootstrap Table -->
            <div class="card" id="view-category-section">
              <h5 class="card-header">View Categories</h5>
              <div class="table-responsive text-nowrap">
                <table class="table">
                  <thead>
                    <tr>
                      <th>Name</th>
                      <th>Description</th>
                      <th>Offer %</th>
                      <th>Status</th>
                      <th>Status</th>
                      <th>Action</th>
                      <th>Edit</th>
                    </tr>
                  </thead>
                  <tbody class="table-border-bottom-0">
                    <% data.reverse().forEach((category,index)=>{ %>
                    <tr>
                      <td><%= category.name %></td>
                      <td><%= category.description %></td>
                      <td><%= category.categoryOffer || '0%' %></td>
                      <td>
                        <% if(category.isListed){ %>
                        <span class="badge alert-success" style="width: 70px;"> Listed</span>
                        <% } else { %>
                        <span class="badge alert-danger" style="width: 70px;">Unlisted</span>
                        <% } %>
                      </td>
                      <td>
                        <% if (category.categoryOffer > 0) { %>
                        <button class="btn btn-sm btn-warning" onclick="removeOffer('<%= category._id %>')">Remove Offer</button>
                        <% } else { %>
                        <button class="btn btn-sm btn-secondary" onclick="addOffer('<%= category._id %>')">Add Offer</button>
                        <% } %>
                      </td>
                      <td>
                        <% if(category.isListed) { %>
                        <form id="unlistForm<%= category._id %>" style="display:inline;">
                          <input type="hidden" name="id" value="<%= category._id %>" />
                          <button type="button" class="btn btn-sm btn-danger" style="width: 65px;" onclick="updateCategoryStatus('<%= category._id %>', false)">Unlist</button>
                        </form>
                        <% } else { %>
                        <form id="listForm<%= category._id %>" style="display:inline;">
                          <input type="hidden" name="id" value="<%= category._id %>" />
                          <button type="button" class="btn btn-sm btn-success" style="width: 65px;" onclick="updateCategoryStatus('<%= category._id %>', true)">List</button>
                        </form>
                        <% } %>
                      </td>
                      <td>
                        <button class="btn btn-sm btn-primary">
                          <a href="/admin/editCategory?id=<%= category._id %>" class="text-white">Edit</a>
                        </button>
                      </td>
                    </tr>
                    <% }) %>
                  </tbody>
                </table>
              </div>
            </div>
            <!-- / Content -->
          </div>
          <div class="container-xxl flex-grow-1 container-p-y d-flex justify-content-center align-items-center">
            <nav aria-label="User Pagination">
              <ul class="pagination justify-content-center">
                <!-- Previous Button -->
                <li class="page-item <%= currentPage === 1 ? 'disabled' : '' %>">
                  <a class="page-link" href="<%= currentPage > 1 ? '?search=' + searchQuery + '&page=' + (Number(currentPage)  - 1) : '#' %>" tabindex="-1">
                    Previous
                  </a>
                </li>
                <% for (let i = 1; i <= totalPages; i++) { %>
                <li class="page-item <%= i === currentPage ? 'active' : '' %>">
                  <a class="page-link" href="<%= i === currentPage ? '#' : '?search=' + searchQuery + '&page=' + i %>">
                    <%= i %>
                  </a>
                </li>
                <% } %>
                <li class="page-item <%= currentPage === totalPages ? 'disabled' : '' %>">
                  <a class="page-link" href="<%= currentPage < totalPages ? '?search=' + searchQuery + '&page=' + (Number(currentPage)  + 1) : '#' %>">
                    Next
                  </a>
                </li>
              </ul>
            </nav>
          </div>
        </div>
        <!-- Content wrapper -->
      </div>
      <!-- / Layout page -->

    </div>
  </div>
  <!-- Overlay -->
  <div class="layout-overlay layout-menu-toggle"></div>
  </div>
  <!-- / Layout wrapper -->

  <%- include('../../views/partials/admin/footer') %>

  <script>
    function validateForm() {
      clearErrorMessages();

      const nameInput = document.querySelector('input[name="name"]');
      const descriptionTextarea = document.querySelector('textarea[name="description"]');

      if (!nameInput || !descriptionTextarea) {
        console.error('Form elements not found!');
        return false;
      }

      const name = nameInput.value.trim();
      const description = descriptionTextarea.value.trim();
      let isValid = true;

      if (name === '') {
        displayErrorMessage('name-error', 'Please enter a name');
        isValid = false;
      } else if (!/^[a-zA-Z _-]{3,50}$/.test(name)) {
        displayErrorMessage('name-error', 'Category name should only contain alphabets and (-_)');
        isValid = false;
      }

      if (description === '') {
        displayErrorMessage('description-error', 'Please enter a description');
        isValid = false;
      } else if (!/^[a-zA-Z _.-]{10,150}$/.test(description)) {
        displayErrorMessage('description-error', 'Description should only contain alphabets, numbers, and (-_)');
        isValid = false;
      }

      return isValid;
    }

    function handleFormSubmit(event) {
      event.preventDefault();
      if (!validateForm()) {
        return;
      }

      const name = document.querySelector('input[name="name"]').value;
      const description = document.querySelector('textarea[name="description"]').value;

      fetch('/admin/addCategory', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            name,
            description,
          }),
        })
        .then((response) => {
          if (!response.ok) {
            return response.json().then((err) => {
              throw new Error(err.error);
            });
          }
          return response.json();
        })
        .then((data) => {
          Swal.fire({
            icon: 'success',
            title: 'Success',
            text: data.message,
          }).then(() => {
            window.location.href = '/admin/category';
          });
        })
        .catch((error) => {
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: error.message || 'An unexpected error occurred. Please try again.',
          });
        });
    }


    function displayErrorMessage(elementId, message) {
      var errorElement = document.getElementById(elementId);
      errorElement.innerText = message;
      errorElement.style.display = 'block';
    }

    function clearErrorMessages() {
      const errorElements = document.getElementsByClassName('error-message');
      Array.from(errorElements).forEach((element) => {
        element.innerText = '';
        element.style.display = 'none';
      });
    }
  </script>

  <script>
    function updateCategoryStatus(categoryId, isListed) {
      fetch('/admin/category/' + (isListed ? 'list' : 'unlist'), {
          method: 'PATCH',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            id: categoryId,
            isListed: isListed
          })
        })
        .then(response => response.json())
        .then(data => {
          Swal.fire({
            icon: 'success',
            title: data.message,
          }).then(() => {
            window.location.reload();
          });
        })
        .catch(error => {
          console.error('Error:', error);
          Swal.fire({
            icon: 'error',
            title: 'An error occurred!',
            text: error.message,
          });
        });
    }
  </script>

  <script>
    async function addOffer(categoryId) {
      try {
        const {
          value: amount
        } = await Swal.fire({
          title: 'Offer in percentage',
          input: 'number',
          inputLabel: 'Percentage',
          inputPlaceholder: '%',
          inputAttributes: {
            min: 1,
            max: 100,
            step: 1
          },
          showCancelButton: true,
        });

        if (!amount) {
          Swal.fire('Cancelled', 'No offer added', 'info');
          return;
        }

        const response = await fetch('/admin/addCategoryOffer', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            percentage: amount,
            categoryId: categoryId,
          }),
        });

        const data = await response.json();

        if (response.ok && data.status === true) {
          Swal.fire(
            'Offer Added',
            'The offer has been successfully added.',
            'success'
          ).then(() => {
            location.reload();
          });
        } else {
          Swal.fire(
            'Failed',
            data.message || 'Adding offer failed.',
            'error'
          );
        }
      } catch (error) {
        console.error('Error adding offer:', error);
        Swal.fire(
          'Error',
          'Something went wrong. Please try again later.',
          'error'
        );
      }
    }


    async function removeOffer(categoryId) {
      try {
        const result = await Swal.fire({
          title: 'Remove Offer',
          text: 'Are you sure you want to remove the offer?',
          icon: 'warning',
          showCancelButton: true,
          confirmButtonColor: '#3085d6',
          cancelButtonColor: '#d33',
          confirmButtonText: 'Yes, remove it',
          timer: 5000,
          timerProgressBar: true,
        });

        if (result.isConfirmed) {
          $.ajax({
            url: '/admin/removeCategoryOffer',
            method: 'POST',
            data: {
              categoryId: categoryId,
            },
            success: (response) => {
              if (response.status === true) {
                Swal.fire('Offer Removed', 'The offer has been removed successfully.', 'success').then(() => {
                  location.reload();
                });
              } else {
                Swal.fire('Failed', response.message || 'Removing the offer failed.', 'error');
              }
            },
            error: (err) => {
              console.error('Error:', err);
              Swal.fire('Error', 'Something went wrong. Please try again later.', 'error');
            },
          });
        }
      } catch (error) {
        console.error('Error:', error);
        Swal.fire('Error', 'Something went wrong. Please try again later.', 'error');
      }
    }
  </script>
