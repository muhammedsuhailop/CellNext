<%- include('../../views/partials/user/header') %>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>


<!-- Breadcrumb Section Begin -->
<section class="breadcrumb-option">
  <div class="container">
    <div class="row">
      <div class="col-lg-12">
        <div class="breadcrumb__text">
          <div class="breadcrumb__links">
            <a href="/">Home</a>
            <a href="/my-account">My Account</a>
            <span>My Orders</span>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
<!-- Breadcrumb Section End -->

<section class="shop spad">
  <div class="container">
    <div class="row">
      <%- include('../../views/partials/user/acc-sidebar') %>
      <div class="col-lg-9 col-md-8">
        <section class="accounts">
          <div class="order-body mx-2">
            <div class="d-flex justify-content-between align-items-center mb-3">
              <h4 class="section-heading">My Orders</h4>
              <a href="/shop" class="gen-btn">
                <i class='bx bxs-cart'></i> Shop Now
              </a>
            </div>

            <% if (orderDetails.length === 0) { %>
            <div class="alert alert-info">You have no orders yet.</div>
            <a href="/shop" class="gen-btn">Time to Grab Your First Order</a>
            <% } else { %>
            <div class="table-responsive">
              <table class="table ">
                <thead>
                  <tr>
                    <th>Order ID</th>
                    <th>Order Date</th>
                    <th>Status</th>
                    <th>Total Price</th>
                    <th>Action</th>
                  </tr>
                </thead>
                <tbody>
                  <% orderDetails.forEach(order => { %>
                  <tr>
                    <td><%= order.orderId %></td>
                    <td>
                      <%= new Date(order.orderDate).toLocaleDateString('en-IN', { 
                                weekday: 'short', day: '2-digit', month: '2-digit', year: '2-digit' 
                              }) %>
                    </td>
                    <td>
                      <span class="badge
                            <% if (order.status === 'Pending' || order.status === 'Placed') { %>
                              bg-info text-white
                            <% } else if (order.status === 'Shipped') { %>
                              bg-primary text-white
                            <% } else if (order.status === 'Delivered') { %>
                              bg-success text-white
                            <% } else if (order.status === 'Returned' || order.status === 'Partial Return' || order.status=== 'Partial Cancellation') { %>
                              bg-warning text-white
                            <% } else if (order.status === 'Cancelled' || order.status === 'Cancel Request') { %>
                              bg-danger text-white
                            <% } %>">
                        <% if (order.status === 'Cancel Request') { %>
                        Cancellation Requested
                        <% } else { %>
                        <%= order.status %>
                        <% } %>
                      </span>
                    </td>
                    <td>₹ <%= order.finalAmount.toLocaleString('en-IN', { minimumFractionDigits: 1, maximumFractionDigits: 2 }) %></td>
                    <td>
                      <button class="btn btn-sm btn-secondary" type="button" data-bs-toggle="collapse" data-bs-target="#orderDetail<%= order._id %>" aria-expanded="false" aria-controls="orderDetail<%= order._id %>">
                        View Details
                      </button>
                    </td>
                  </tr>

                  <tr class="collapse" id="orderDetail<%= order._id %>">
                    <td colspan="5">
                      <div class="order-card no-radius-card p-3">
                        <div class="row align-items-center border-bottom pb-2 mb-3">
                          <% if (order.status === 'Pending') { %>
                          <div class="col-md-2">
                            <button class="btn btn-danger btn-sm btn-action" onclick="cancelOrder('<%= order._id %>')">Cancel Order</button>
                          </div>
                          <% } %>
                          <div class="col-md-6">
                            <h6 class="mb-1">Order ID: <%= order.orderId %></h6>
                            <p class="mb-0">
                              <strong>Order Date:</strong>
                              <%= new Date(order.orderDate).toLocaleDateString('en-IN', { 
                                        weekday: 'long', day: '2-digit', month: '2-digit', year: '2-digit' 
                                      }) %>
                            </p>
                          </div>
                          <div class="col-md-4 text-md-end d-flex justify-content-around align-items-center">
                            <div>
                              <p class="mb-0">
                                <strong>Status:</strong>
                                <span class="btn-sm 
                                      <% if (order.status === 'Pending') { %> bg-info text-white
                                      <% } else if (order.status === 'Placed') { %> bg-info text-white
                                      <% } else if (order.status === 'Shipped') { %> bg-primary text-white
                                      <% } else if (order.status === 'Delivered') { %> bg-success text-white
                                      <% } else if (order.status === 'Returned') { %> bg-warning text-white
                                      <% } else if (order.status === 'Cancelled') { %> bg-danger text-white
                                      <% } else if (order.status === 'Cancel Request') { %> bg-danger text-white
                                      <% } else if (order.status === 'Partial Return') { %> bg-warning text-white
                                      <% } %> mx-2">
                                  <% if (order.status === 'Cancel Request') { %>
                                  Cancellation Requested
                                  <% } else { %>
                                  <%= order.status %>
                                  <% } %>
                                </span>
                              </p>
                            </div>
                            <div>
                              <% if (order.items.some(item => item.itemStatus === 'Delivered')) { %>
                              <a href="/order/invoice/<%= order._id %>" class="btn btn-sm btn-secondary mx-2">
                                <i class='bx bx-download'></i> Invoice
                              </a>
                              <% } %>
                            </div>
                          </div>
                        </div>

                        <div class="row">
                          <div class="col-md-4">
                            <p><strong>Final Price:</strong> ₹ <%= order.finalAmount.toLocaleString('en-IN', { minimumFractionDigits: 1, maximumFractionDigits: 2 }) %></p>
                          </div>
                          <div class="col-md-4">
                            <p><strong>Discount:</strong> ₹ <%= order.discount.toLocaleString('en-IN', { minimumFractionDigits: 1, maximumFractionDigits: 2 }) %></p>
                          </div>
                          <div class="col-md-4">
                            <p><strong>Payment Method:</strong> <%= order.paymentMethod.toUpperCase() %></p>
                          </div>
                        </div>

                        <div class="row">
                          <div class="col-md-4">
                            <% if (order.couponName !== 'NA') { %>
                            <p><strong>Coupon Name:</strong> <%= order.couponName %></p>
                            <% } %>
                          </div>
                          <div class="col-md-4">
                            <% if (order.couponName !== 'NA') { %>
                            <p><strong>Coupon Discount:</strong> <%= order.couponDiscount %></p>
                            <% } %>
                          </div>
                          <div class="col-md-4">
                            <p>
                              <strong>Payment Status:</strong>
                              <span class="badge text-white bg-<%= order.paymentStatus === 'Pending' ? 'warning' : 'success' %>">
                                <%= order.paymentStatus %>
                              </span>
                            </p>
                          </div>
                        </div>

                        <h6 class="mt-4">Order Items</h6>
                        <div class="table-responsive">
                          <table class="order-table table">
                            <thead>
                              <tr>
                                <th>Product Name</th>
                                <th>Color</th>
                                <th>Size</th>
                                <th>Quantity</th>
                                <th>Price</th>
                                <th>Status</th>
                                <th>Actions</th>
                              </tr>
                            </thead>
                            <tbody>
                              <% order.items.reverse().forEach(item => { %>
                              <tr>
                                <td><%= item.productName %></td>
                                <td><%= item.variantDetails.color || "N/A" %></td>
                                <td>
                                  <% if (item.variantDetails.size && item.variantDetails.size !== "NA") { %>
                                  <%= item.variantDetails.size %>
                                  <% } else { %>
                                  -
                                  <% } %>
                                </td>
                                <td><%= item.quantity %></td>
                                <td>₹<%= item.variantDetails.salePrice %></td>
                                <td>
                                  <span class="badge badge-secondary"><%= item.itemStatus %></span>
                                </td>
                                <td>
                                  <% if (item.itemStatus === 'Pending' || item.itemStatus === 'Placed') { %>
                                  <button class="btn btn-danger btn-sm btn-action" onclick="cancelItemOrder('<%= order._id %>', '<%= item.productId %>', '<%= item.variantIndex %>')">
                                    Cancel
                                  </button>
                                  <% } %>
                                  <% if (item.itemStatus === 'Delivered') { 
                                            const today = new Date();
                                            const deliveredOn = new Date(item.deliveredOn);
                                            const daysDifference = (today - deliveredOn) / (1000 * 3600 * 24);
                                        %>
                                  <% if (daysDifference <= 14) { %>
                                  <button class="btn btn-warning btn-sm btn-action text-white" onclick="openReturnModal('<%= order._id %>', '<%= item.productId %>', '<%= item.variantIndex %>')">
                                    Return
                                  </button>
                                  <% } %>
                                  <% } %>
                                </td>
                              </tr>
                              <% }) %>
                            </tbody>
                          </table>
                        </div>

                        <% if (order.status === 'Pending' && order.paymentMethod === 'razorpay') { %>
                        <% if (new Date() - new Date(order.invoiceDate) <= 24 * 60 * 60 * 1000) { %>
                        <div class="row justify-content-between">
                          <div class="col-md-8 mx-2">
                            <i>Payment retries are allowed within 24 hours of order initiation.</i>
                          </div>
                          <div class="col-md-2 mx-2">
                            <button class="btn bg-info text-white btn-sm btn-action" onclick="retryPayment('<%= order._id %>')">Retry Payment</button>
                          </div>
                        </div>
                        <% } else { %>
                        <div class="row justify-content-center">
                          <div class="col-md-12">
                            <i>You can only retry your payment within 24 hours of order initiation.</i>
                          </div>
                        </div>
                        <% } %>
                        <% } %>
                      </div>
                    </td>
                  </tr>
                  <% }) %>
                </tbody>
              </table>
            </div>

            <!-- Pagination -->
            <div class="row">
              <div class="col-lg-12">
                <div class="product__pagination">
                  <% if (currentPage > 1) { %>
                  <a href="?page=<%= currentPage - 1 %>">&lt;</a>
                  <% } %>
                  <% if (currentPage > 3) { %>
                  <a href="?page=1">1</a>
                  <% if (currentPage > 4) { %>
                  <span>...</span>
                  <% } %>
                  <% } %>
                  <% for (let i = Math.max(1, currentPage - 2); i <= Math.min(totalPages, currentPage + 2); i++) { %>
                  <% if (i === currentPage) { %>
                  <a class="active" href="#"><%= i %></a>
                  <% } else { %>
                  <a href="?page=<%= i %>"><%= i %></a>
                  <% } %>
                  <% } %>
                  <% if (currentPage < totalPages - 2) { %>
                  <% if (currentPage < totalPages - 3) { %>
                  <span>...</span>
                  <% } %>
                  <a href="?page=<%= totalPages %>"><%= totalPages %></a>
                  <% } %>
                  <% if (currentPage < totalPages) { %>
                  <a href="?page=<%= currentPage + 1 %>">&gt;</a>
                  <% } %>
                </div>
              </div>
            </div>
            <% } %>

            <!-- Return Modal -->
            <div class="modal fade" id="returnModal" tabindex="-1" aria-labelledby="returnModalLabel" aria-hidden="true">
              <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                  <!-- Modal Header -->
                  <div class="modal-header bg-secondary text-white">
                    <h5 class="modal-title" id="returnModalLabel">Return Item</h5>
                    <button type="button" class="close text-white" data-bs-dismiss="modal" aria-label="Close">
                      <span aria-hidden="true">&times;</span>
                    </button>
                  </div>
                  <!-- Modal Body -->
                  <div class="modal-body">
                    <form id="returnForm">
                      <input type="hidden" id="orderId">
                      <input type="hidden" id="productId">
                      <input type="hidden" id="variantIndex">
                      <div class="form-group d-flex align-items-center">
                        <label for="returnReason" class="mx-2 me-3"><strong>Reason for Return</strong></label>
                        <input type="text" class="form-control" id="returnReason" name="reason" list="reason-options" placeholder="Enter or select a reason" pattern="[A-Za-z0-9\s]+" />
                        <datalist id="reason-options">
                          <option value="Damaged product"></option>
                          <option value="Wrong item received"></option>
                          <option value="Quality issue"></option>
                        </datalist>
                      </div>
                    </form>
                  </div>
                  <!-- Modal Footer -->
                  <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-dark" onclick="submitReturnRequest()">Submit Request</button>
                  </div>
                </div>
              </div>
            </div>

          </div>
        </section>
      </div>

    </div>
  </div>
</section>




<!-- Footer Section -->
<%- include('../../views/partials/user/footer') %>

<!-- Search Begin -->
<div class="search-model">
  <div class="h-100 d-flex align-items-center justify-content-center">
    <div class="search-close-switch">+</div>
    <form class="search-model-form">
      <input type="text" id="search-input" placeholder="Search here.....">
    </form>
  </div>
</div>
<!-- Search End -->

<script>
  async function retryPayment(orderId) {
    try {
      const response = await fetch(`/orders/retry-payment`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          orderId
        })
      });

      const result = await response.json();
      console.log('Retry Payment Response:', result);

      if (!result.success) {
        Swal.fire('Error', result.message, 'error');
        return;
      }

      const options = {
        key: result.key,
        amount: result.finalAmount * 100,
        currency: "INR",
        name: "CellNext",
        description: "Retry Order Payment",
        order_id: result.razorpayOrderId,
        image: '/img/CellNext.png',
        handler: async function(response) {
          try {
            const verifyResponse = await fetch('/orders/verify-razorpay-payment', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({
                orderId,
                razorpayPaymentId: response.razorpay_payment_id,
                razorpaySignature: response.razorpay_signature,
              }),
            });

            const verifyResult = await verifyResponse.json();
            console.log('Payment Verification Response:', verifyResult);

            if (verifyResult.success) {
              Swal.fire({
                title: 'Success',
                text: 'Payment successful! Your order is confirmed.',
                icon: 'success',
                timer: 3500,
                timerProgressBar: true,
                showConfirmButton: false,
              }).then(() => {
                window.location.href = '/my-orders';
              });
            } else {
              Swal.fire('Error', 'Payment verification failed. Please contact support.', 'error');
            }
          } catch (error) {
            Swal.fire('Error', 'Payment verification error. Try again.', 'error');
          }
        },
        theme: {
          color: "#3399cc"
        },
      };

      const razorpay = new Razorpay(options);

      razorpay.on('payment.failed', async function(response) {
        console.log("Payment failed: ", response.error);
        try {
          const markResponse = await fetch('/orders/mark-payment-failed', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              orderId
            })
          });
          const markResult = await markResponse.json();
          console.log('Marked as failed:', markResult);
        } catch (err) {
          console.error("Error marking payment as failed:", err);
        }
        Swal.fire({
          title: 'Payment Failed',
          text: response.error.description || 'Payment could not be completed. Please try again.',
          icon: 'error',
          confirmButtonText: 'OK'
        }).then(() => {
          razorpay.close();
          window.location.href = '/my-orders';
        });
      });

      razorpay.open();
    } catch (error) {
      console.error('Error initiating retry payment:', error);
      Swal.fire('Error', 'Something went wrong. Please try again later.', 'error');
    }
  }
</script>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    function openReturnModal(orderId, productId, variantIndex) {
      document.getElementById('orderId').value = orderId;
      document.getElementById('productId').value = productId;
      document.getElementById('variantIndex').value = variantIndex;

      document.getElementById('returnReason').value = '';

      $('#returnModal').modal('show');
    }

    async function submitReturnRequest() {
      const orderId = document.getElementById('orderId').value;
      const productId = document.getElementById('productId').value;
      const variantIndex = document.getElementById('variantIndex').value;
      const returnReason = document.getElementById('returnReason').value.trim();

      if (!returnReason) {
        return Swal.fire({
          icon: 'warning',
          title: 'Missing Information',
          text: 'Please select or enter a return reason.'
        });
      }

      if (returnReason.length < 8) {
        return Swal.fire({
          icon: 'warning',
          title: 'Invalid Reason',
          text: 'Please provide at least 8 characters for the reason.'
        });
      }

      const requestBody = {
        orderId,
        productId,
        variantIndex,
        returnReason: returnReason
      };

      console.log('requestBody', requestBody);

      try {
        const response = await fetch('/orders/request-return', {
          method: 'PATCH',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(requestBody)
        });

        if (response.ok) {
          const result = await response.json();
          Swal.fire({
            icon: 'success',
            title: 'Success',
            text: 'Return request submitted successfully!'
          }).then(() => {
            location.reload();
          });
        } else {
          const error = await response.json();
          console.error("Error:", error);
          Swal.fire({
            icon: 'error',
            title: 'Error',
            text: error.message || 'An error occurred while submitting the return request.'
          });
        }
      } catch (error) {
        console.error("Error submitting return request:", error);
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: 'An error occurred. Please try again.'
        });
      }
    }


    // Expose functions globally to be called in the modal
    window.openReturnModal = openReturnModal;
    window.submitReturnRequest = submitReturnRequest;
  });
</script>


<script>
  async function cancelOrder(orderId) {
    Swal.fire({
      title: "Are you sure?",
      text: "Do you really want to request cancellation?",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#d33",
      cancelButtonColor: "#3085d6",
      confirmButtonText: "Yes, request cancel"
    }).then(async (result) => {
      if (result.isConfirmed) {
        try {
          const response = await fetch(`/orders/${orderId}/cancel`, {
            method: "PATCH",
            headers: {
              "Content-Type": "application/json"
            }
          });

          const data = await response.json();

          if (response.ok) {
            Swal.fire("Cancelled!", data.message, "success").then(() => {
              location.reload();
            });
          } else {
            Swal.fire("Error!", data.message, "error");
          }
        } catch (error) {
          console.error("Error cancelling order:", error);
          Swal.fire("Error!", "Something went wrong. Try again.", "error");
        }
      }
    });
  }
</script>

<script>
  async function cancelItemOrder(orderId, productId, variantIndex) {
    Swal.fire({
      title: "Are you sure?",
      text: "Do you really want to request cancellation for this item?",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#d33",
      cancelButtonColor: "#3085d6",
      confirmButtonText: "Yes, request cancel"
    }).then(async (result) => {
      if (result.isConfirmed) {
        try {
          const response = await fetch(`/orders/${orderId}/cancel-item`, {
            method: "PATCH",
            headers: {
              "Content-Type": "application/json"
            },
            body: JSON.stringify({
              productId,
              variantIndex
            })
          });

          const data = await response.json();

          if (response.ok) {
            Swal.fire("Cancelled!", data.message, "success").then(() => {
              location.reload();
            });
          } else {
            Swal.fire("Error!", data.message, "error");
          }
        } catch (error) {
          console.error("Error cancelling item:", error);
          Swal.fire("Error!", "Something went wrong. Try again.", "error");
        }
      }
    });
  }
</script>