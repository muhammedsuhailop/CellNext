<link rel="stylesheet" href="css/product-page.css" type="text/css">

<%- include('../../views/partials/user/header') %>
<!-- Header Section End -->


<!-- Breadcrumb Section Begin -->
<section class="breadcrumb-option">
  <div class="container">
    <div class="row">
      <div class="col-lg-12">
        <div class="breadcrumb__text">
          <h4>Shopping Cart</h4>
          <div class="breadcrumb__links">
            <a href="/">Home</a>
            <a href="/shop">Shop</a>
            <span>Shopping Cart</span>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>
<!-- Breadcrumb Section End -->

<!-- Shopping Cart Section Begin -->
<section class="shopping-cart spad">
  <div class="container">
    <div class="row">
      <div class="col-lg-8">
        <div class="shopping__cart__table">
          <% if (typeof outOfStockMessage !== 'undefined' && outOfStockMessage) { %>
          <div class="alert alert-warning">
            <%= outOfStockMessage %>
          </div>
          <% } %>
          <table>
            <% if (cartItems.length > 0) { %>
            <thead>
              <tr>
                <th>Product</th>
                <th>Quantity</th>
                <th>Total</th>
                <th></th>
              </tr>
            </thead>
            <tbody>
              <% cartItems.forEach(item => { %>
              <tr data-product-id="<%= item.productId %>" data-variant-id="<%= item.variantId %>">
                <td class="product__cart__item">
                  <div class="product__cart__item__pic">
                    <img src="<%= item.image %>" alt="<%= item.name %>">
                  </div>
                  <div class="product__cart__item__text">
                    <h6><%= item.name %></h6>
                    <h6>₹ <%= new Intl.NumberFormat('en-IN', { 
                        style: 'currency', 
                        currency: 'INR', 
                        minimumFractionDigits: 2 
                    }).format(item.price).replace('₹', '').trim() %>
                    </h6>
                    <span class="font-weight-light"><%= item.color %>
                      <% if (item.size !== 'NA') { %>
                      | <%= item.size %>
                      <% } %>
                    </span>
                  </div>
                </td>
                <td class="quantity__item">
                  <div class="quantity">
                    <div class="pro-qty-2">
                      <input type="text" class="quantity-input" value="<%= item.quantity %>" readonly hidden>
                      <span value="<%= item.quantity %>" readonly> - <%= item.quantity %> - </span>
                    </div>
                  </div>
                </td>
                <td class="cart__price">₹ <%= new Intl.NumberFormat('en-IN', { 
                    style: 'currency', 
                    currency: 'INR', 
                    minimumFractionDigits: 2 
                }).format(item.total).replace('₹', '').trim() %>
                </td>
                <td class="cart__close">
                  <span class="remove-from-cart" data-product-id="<%= item.productId %>" data-variant-id="<%= item.variantId %>" style="cursor: pointer;">
                    <i class="fa fa-close"></i>
                  </span>
                </td>
              </tr>
              <% }) %>
              <% } else { %>
              <tr>
                <td colspan="4" class="text-center">Your cart is empty</td>
              </tr>
              <% } %>
            </tbody>
          </table>
        </div>


        <div class="row">
          <div class="col-lg-6 col-md-6 col-sm-6">
            <div class="continue__btn">
              <a href="/shop">Continue Shopping</a>
            </div>
          </div>
          <!-- <div class="col-lg-6 col-md-6 col-sm-6">
            <div class="continue__btn update__btn">
              <a href="/cart"><i class="fa fa-spinner"></i> Update cart</a>
            </div>
          </div> -->
        </div>
      </div>
      <div class="col-lg-4">
        <!-- <div class="cart__discount">
          <h6>Discount codes</h6>
          <form action="#">
            <input type="text" placeholder="Coupon code">
            <button type="submit">Apply</button>
          </form>
        </div> -->
        <div class="cart__total">
          <h6>Cart total</h6>
          <ul>
            <li>Subtotal <span>₹ <%= (totalAmount).toLocaleString('en-IN', { minimumFractionDigits: 1, maximumFractionDigits: 2 }) %></span></li>

            <li>Total <span>₹ <%= (totalAmount).toLocaleString('en-IN', { minimumFractionDigits: 1, maximumFractionDigits: 2 }) %></span></li>
          </ul>
          <% if (cartItems.length > 0) { %>
          <a href="/checkout" class="primary-btn">Proceed to checkout</a>
          <% } else { %>
          <a href="/shop" class="primary-btn">Continue Shopping</a>
          <% } %>
        </div>

      </div>
    </div>
  </div>
</section>
<!-- Shopping Cart Section End -->

<%- include('../../views/partials/user/footer') %>
<script>
  document.addEventListener("DOMContentLoaded", () => {
    document.querySelectorAll(".remove-from-cart").forEach(button => {
      button.addEventListener("click", async (event) => {
        event.preventDefault();

        const productId = event.target.closest(".remove-from-cart").dataset.productId;
        const variantId = event.target.closest(".remove-from-cart").dataset.variantId;

        const result = await Swal.fire({
          title: 'Are you sure?',
          text: 'This item will be removed from your cart.',
          icon: 'warning',
          showCancelButton: true,
          confirmButtonText: 'Yes, remove it!',
          cancelButtonText: 'No, keep it',
          reverseButtons: true
        });

        if (result.isConfirmed) {
          try {
            const response = await fetch(`/cart/remove/${productId}?variantId=${variantId}`, {
              method: "DELETE",
              headers: {
                "Content-Type": "application/json"
              }
            });

            if (response.ok) {
              event.target.closest("tr").remove();

              Swal.fire({
                title: 'Removed!',
                text: 'The product has been removed from your cart.',
                icon: 'success',
                confirmButtonText: 'Okay'
              }).then(()=>{
                window.location.reload();
              });
            } else {
              console.error("Failed to remove product from cart");

              Swal.fire({
                title: 'Error!',
                text: 'There was an error removing the product.',
                icon: 'error',
                confirmButtonText: 'Try again'
              });
            }
          } catch (error) {
            console.error("Error removing item:", error);

            Swal.fire({
              title: 'Error!',
              text: 'An unexpected error occurred.',
              icon: 'error',
              confirmButtonText: 'Try again'
            });
          }
        }
      });
    });
  });
</script>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('#dec-quantity').forEach(function(decBtn) {
      decBtn.addEventListener('click', function() {
        const parentRow = this.closest('tr');
        const productId = parentRow.getAttribute('data-product-id');
        const variantId = parentRow.getAttribute('data-variant-id');
        const quantityInput = parentRow.querySelector('.quantity-input');
        let quantity = parseInt(quantityInput.value);
        if (quantity <= 1) {
          return;
        } else {
          updateCart(productId, variantId, -1);
        }
      });
    });

    document.querySelectorAll('#inc-quantity').forEach(function(incBtn) {
      incBtn.addEventListener('click', function() {
        const parentRow = this.closest('tr');
        const productId = parentRow.getAttribute('data-product-id');
        const variantId = parentRow.getAttribute('data-variant-id');
        const quantityInput = parentRow.querySelector('.quantity-input');
        let quantity = parseInt(quantityInput.value);
        if (quantity >= 5) {
          return;
        } else {
          updateCart(productId, variantId, '1');
        }
      });
    });

    function updateCart(productId, variantId, quantity) {
      const cartData = {
        productId: productId,
        variantId: parseInt(variantId, 10),
        quantity: parseInt(quantity, 10)
      };
      fetch('/cart/add', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(cartData)
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            window.location.reload();
          } else {
            Swal.fire({
              title: 'Error!',
              text: data.message || 'An unexpected error occurred.',
              icon: 'error',
              confirmButtonText: 'Try again',
              timer: 1500,
              timerProgressBar: true,
            }).then(() => {
              window.location.reload();
            });
          }
        })
        .catch(error => {
          console.error('Error:', error);
          alert('Error updating cart');
        });
    }
  });
</script>